
> @qp/web@0.0.1 dev C:\Users\victo\Documents\reactNextJS\quinielas\apps\web
> next dev --port 3000

   ▲ Next.js 15.5.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.100.3:3000
   - Environments: .env.local
   - Experiments (use with caution):
     · optimizePackageImports

 ✓ Starting...
 ✓ Ready in 3.8s
 ✓ Compiled /middleware in 344ms (208 modules)
 ○ Compiling /[locale] ...
<w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (128kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
 ✓ Compiled /[locale] in 6.5s (1428 modules)
 ✓ Compiled in 1331ms (559 modules)
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 9888ms
 ○ Compiling /api/auth/[...nextauth] ...
 ✓ Compiled /api/auth/[...nextauth] in 1488ms (1578 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /sw.js 404 in 439ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://localhost:3000
 GET /api/auth/session 200 in 3778ms
 ○ Compiling /api/trpc/[trpc] ...
 ✓ Compiled /api/trpc/[trpc] in 15.1s (3928 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile,health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 207 in 20235ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 646ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile,health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 207 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 345ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 40ms
 ○ Compiling /[locale]/auth/signin ...
 ✓ Compiled /[locale]/auth/signin in 2.6s (3966 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 3014ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/health,auth.getSession,user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 207 in 3303ms
 GET /favicon.ico 404 in 2991ms
 GET /android-chrome-192x192.png 404 in 2972ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 29ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 5203ms
 ○ Compiling /[locale]/[poolSlug] ...
 ✓ Compiled /[locale]/[poolSlug] in 2.9s (3992 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/csrf
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/csrf 200 in 1614ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 2639ms
[auth-route] POST Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/signout
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 POST /api/auth/signout 200 in 59ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 4522ms
 GET /es-MX 200 in 649ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 25ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 112ms
 GET /android-chrome-192x192.png 404 in 281ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 145ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" = $2 AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $3) LIMIT $4 OFFSET $5
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" IS NULL AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 459ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 359ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 170ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 163ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 166ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" = $2 AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $3) LIMIT $4 OFFSET $5
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" IS NULL AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 80ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 102ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/providers
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/providers 200 in 25ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/csrf
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/csrf 200 in 23ms
[auth-route] POST Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/signin/email
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[90m[auth][debug]:[0m adapter_getUserByEmail {
  "args": [
    "chronos.devs@gmail.com"
  ]
}
prisma:query SELECT 1
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
[auth] sendVerificationRequest called
[auth] Email: chronos.devs@gmail.com
[auth] Generated URL: http://ivoka.localhost:3000/api/auth/callback/email?callbackUrl=http%3A%2F%2Fivoka.localhost%3A3000%2Fes-MX%2Fdashboard&token=74ce0c3542a8fe294573948e27875804e27f5a10ff26a9fe5ad39fb0445a91b8&email=chronos.devs%40gmail.com
[auth] Host from URL: ivoka.localhost:3000
[90m[auth][debug]:[0m adapter_createVerificationToken {
  "args": [
    {
      "identifier": "chronos.devs@gmail.com",
      "token": "e44e2bb3d4034d0986a78ad64f871814bf5a59574b235e358c42e15ba437bc69",
      "expires": "2025-10-28T19:43:54.107Z"
    }
  ]
}
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."VerificationToken" ("identifier","token","expires") VALUES ($1,$2,$3) RETURNING "public"."VerificationToken"."token", "public"."VerificationToken"."identifier", "public"."VerificationToken"."expires"
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" = $1 ORDER BY "public"."Brand"."createdAt" ASC LIMIT $2 OFFSET $3
[auth] Found brand: Ivoka
prisma:query SELECT "public"."User"."id", "public"."User"."metadata" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."tenantId" = $1 AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
[auth] Sending magic link email with branding
 POST /api/auth/signin/email? 200 in 1646ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 27ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/callback/email?callbackUrl=http%3A%2F%2Fivoka.localhost%3A3000%2Fes-MX%2Fdashboard&token=74ce0c3542a8fe294573948e27875804e27f5a10ff26a9fe5ad39fb0445a91b8&email=chronos.devs%40gmail.com
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[90m[auth][debug]:[0m adapter_useVerificationToken {
  "args": [
    {
      "identifier": "chronos.devs@gmail.com",
      "token": "e44e2bb3d4034d0986a78ad64f871814bf5a59574b235e358c42e15ba437bc69"
    }
  ]
}
prisma:query DELETE FROM "public"."VerificationToken" WHERE (("public"."VerificationToken"."identifier" = $1 AND "public"."VerificationToken"."token" = $2) AND 1=1) RETURNING "public"."VerificationToken"."token", "public"."VerificationToken"."identifier", "public"."VerificationToken"."expires"
[90m[auth][debug]:[0m adapter_getUserByEmail {
  "args": [
    "chronos.devs@gmail.com"
  ]
}
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
[90m[auth][debug]:[0m adapter_getUserByEmail {
  "args": [
    "chronos.devs@gmail.com"
  ]
}
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
[90m[auth][debug]:[0m adapter_updateUser {
  "args": [
    {
      "id": "cmh86pzqv000huv782y7l8m9g",
      "emailVerified": "2025-10-27T19:44:07.546Z"
    }
  ]
}
prisma:query UPDATE "public"."User" SET "emailVerified" = $1, "updatedAt" = $2 WHERE ("public"."User"."id" = $3 AND 1=1) RETURNING "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt"
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."role"::text, "public"."TenantMember"."tenantId" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" = $1 OFFSET $2
prisma:query UPDATE "public"."User" SET "lastSignInAt" = $1, "updatedAt" = $2 WHERE ("public"."User"."id" = $3 AND 1=1) RETURNING "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt"
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" = $1 LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","actorId","userId","action","metadata","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 GET /api/auth/callback/email?callbackUrl=http%3A%2F%2Fivoka.localhost%3A3000%2Fes-MX%2Fdashboard&token=74ce0c3542a8fe294573948e27875804e27f5a10ff26a9fe5ad39fb0445a91b8&email=chronos.devs%40gmail.com 302 in 70ms
 ○ Compiling /[locale]/dashboard ...
 ✓ Compiled /[locale]/dashboard in 4.5s (5158 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 6520ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 49ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND 1=1 AND ("j0"."tenantId" = $4 AND "j0"."isActive" = $5 AND ("j0"."id" IS NOT NULL))) OFFSET $6
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE (1=0 AND "public"."Match"."status" = CAST($1::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $2) GROUP BY "public"."Match"."seasonId" OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 519ms
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 351ms
 GET /android-chrome-192x192.png 404 in 371ms
 GET /es-MX/auth/signin 200 in 587ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 493ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 282ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 297ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 187ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 347ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 56ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/health,auth.getSession,user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 191ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 231ms
 GET /es-MX/auth/signin 200 in 538ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 274ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 251ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 222ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 206ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 65ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 85ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 44ms
 ○ Compiling /[locale]/auth/register/[poolSlug] ...
 ✓ Compiled /[locale]/auth/register/[poolSlug] in 3.8s (5918 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" = $2 AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $3) LIMIT $4 OFFSET $5
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" IS NULL AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/register/liga-mx-2025-apertura16 200 in 6662ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 181ms
 GET /android-chrome-192x192.png 404 in 224ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 175ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
 GET /api/trpc/user.getProfile,users.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh86pzqv000huv782y7l8m9g%22%7D%7D%7D 200 in 267ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 479ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 331ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 283ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 249ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 174ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."phone" FROM "public"."User" WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Registration" ("id","poolId","userId","tenantId","displayName","email","emailVerified","phone","phoneVerified","joinedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","userId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 POST /api/trpc/registration.registerPublic?batch=1 200 in 53ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 79ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/users.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh86pzqv000huv782y7l8m9g%22%7D%7D%7D 200 in 101ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 33ms
 ○ Compiling /[locale]/pools/[slug]/fixtures ...
 ✓ Compiled /[locale]/pools/[slug]/fixtures in 3.4s (6009 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-2025-apertura16/fixtures 200 in 5067ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /android-chrome-192x192.png 404 in 273ms
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh86v5mk0008uv3g5lj34ff6%22%7D%7D%7D 200 in 335ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/prizes.listByPool,pools.getById,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 57ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/pools.getRegistrations,fixtures.getByPoolId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
🌐 Fetching standings from API: league=262, season=2025
✅ Standings fetched successfully: 1 result(s)
prisma:query UPDATE "public"."Competition" SET "logoUrl" = $1, "updatedAt" = $2 WHERE ("public"."Competition"."id" = $3 AND 1=1) RETURNING "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt"
prisma:query INSERT INTO "public"."CompetitionStandings" ("id","competitionId","seasonYear","standingsData","lastFetchedAt","lastUpdatedAt","fetchedBy","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) ON CONFLICT ("competitionId","seasonYear") DO UPDATE SET "standingsData" = $9, "fetchedBy" = $10, "lastFetchedAt" = $11, "lastUpdatedAt" = $12 WHERE (("public"."CompetitionStandings"."competitionId" = $13 AND "public"."CompetitionStandings"."seasonYear" = $14) AND 1=1) RETURNING "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt"
💾 Standings cached for competition=cmh86v5mk0008uv3g5lj34ff6, season=2025
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22liga-mx-2025-apertura16%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 472ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 112ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 139ms
 GET /android-chrome-192x192.png 404 in 137ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 105ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 130ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 110ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 68ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 161ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-2025-apertura16/fixtures 200 in 103ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh86v69q00keuv3ghsjicfs7%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh86v5mk0008uv3g5lj34ff6%22%7D%7D%7D 200 in 173ms
 GET /android-chrome-192x192.png 404 in 181ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.0h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22liga-mx-2025-apertura16%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 75ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
