
> @qp/admin@0.0.1 dev C:\Users\victo\Documents\reactNextJS\quinielas\apps\admin
> next dev --port 3001

   â–² Next.js 15.5.4
   - Local:        http://localhost:3001
   - Network:      http://192.168.100.3:3001
   - Environments: .env.local
   - Experiments (use with caution):
     Â· optimizePackageImports

 âœ“ Starting...
 âœ“ Ready in 13.6s
 âœ“ Compiled /middleware in 408ms (264 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale] ...
 âœ“ Compiled /[locale] in 8.2s (1605 modules)
 âœ“ Compiled in 762ms (546 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 11380ms
 â—‹ Compiling /api/auth/[...nextauth] ...
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/pools in 9.8s (4000 modules)
 GET /es-MX/pools 200 in 9922ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /favicon.ico 404 in 10597ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 303ms
 â—‹ Compiling /[locale]/pools/new ...
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 12224ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 12682ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/branding in 9.9s (6510 modules)
 âœ“ Compiled in 1556ms (677 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 12100ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 5725ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 5.8s (8438 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 662ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 275ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 9230ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 6.4s (8443 modules)
 GET /es-MX/analytics 404 in 6674ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing seasons for league 262
[Cache] SET: api-football:/leagues:id=262 (TTL: 60min)
 GET /api/trpc/poolWizard.listSeasons?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%7D%7D%7D 200 in 653ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Lig', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 450ms
[Cache] SET: api-football:/leagues:search=Lig (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Lig%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 553ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga ', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga  (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 286ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga M', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga MX', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga M (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20M%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 236ms
[Cache] SET: api-football:/leagues:search=Liga MX (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20MX%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 247ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 481ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: undefined
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22roundLabel%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 41ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 44ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 81ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[Cache] HIT: api-football:/fixtures:league=262&season=2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 205ms
 GET /api/auth/session 200 in 106ms
 âœ“ Compiled in 1298ms (1605 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 274ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 497ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 313ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 271ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 391ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 2.8s (6109 modules)
 GET /es-MX/analytics 404 in 3463ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 587ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 4.4s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/new?step=3 200 in 5208ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 120ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 8584ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 28ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 42ms
 âœ“ Compiled in 1622ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5207ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
 GET /es-MX/pools/new?step=3 200 in 4908ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 470ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 29ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 43ms
 âœ“ Compiled in 1798ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 588ms (7437 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
 GET /es-MX/pools/new?step=3 200 in 3740ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5777ms
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 4286ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 4699ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 29ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 23ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 28ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 26ms
 âœ“ Compiled in 1673ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 328ms
 âœ“ Compiled in 3s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 692ms
 âœ“ Compiled in 1199ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 723ms
 âœ“ Compiled in 1205ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 358ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 4.9s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 10832ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 14784ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 40ms
 âœ“ Compiled in 1810ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /es-MX/pools/new?step=3 200 in 592ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 758ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 38ms
 âœ“ Compiled in 2.5s (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 4831ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
 GET /es-MX/pools/new?step=3 200 in 4438ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 382ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 42ms
 âœ“ Compiled in 1891ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 4983ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 4512ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 403ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 28ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 38ms
 âœ“ Compiled in 1409ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 427ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 650ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 42ms
 âœ“ Compiled in 1914ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
 GET /es-MX/pools/new?step=3 200 in 414ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 605ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 29ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 34ms
 âœ“ Compiled in 1818ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 2ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 4905ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
 GET /es-MX/pools/new?step=3 200 in 4495ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 386ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 28ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 41ms
 âœ“ Compiled in 2.1s (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 4831ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
 GET /es-MX/pools/new?step=3 200 in 4442ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 511ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 27ms
 âœ“ Compiled in 1430ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5360ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
 GET /es-MX/pools/new?step=3 200 in 5195ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 477ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 50ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 53ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 41ms
 âœ“ Compiled in 1684ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 4826ms
 âœ“ Compiled in 1ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 4842ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/pools in 1ms (5832 modules)
 âœ“ Compiled in 1ms (5863 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 4699ms
 GET /es-MX/pools 200 in 4223ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 86ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 85ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 314ms
 GET /es-MX/pools/new 200 in 587ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 135ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 77ms
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 1665ms (5899 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 3451ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/access ...
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 4280ms
 âœ“ Compiled /[locale]/access in 2.5s (6845 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 4382ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 3810ms
 â—‹ Compiling /_not-found ...
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 748ms
 âœ“ Compiled /_not-found in 5.4s (8441 modules)
 âœ“ Compiled in 2.9s (8455 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 2.6s (8441 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 3278ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 9745ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 40ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 3698ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 60ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 63ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 60ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 50ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 60ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 53ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 28ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 26ms
 âœ“ Compiled in 1943ms (8455 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (6846 modules)
 âœ“ Compiled in 0ms (6846 modules)
 âœ“ Compiled in 0ms (6846 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5676ms
 âœ“ Compiled in 0ms (6846 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 5556ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 2581ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 29ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 34ms
 âœ“ Compiled in 1819ms (8455 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (6846 modules)
 âœ“ Compiled in 0ms (6846 modules)
 âœ“ Compiled in 0ms (6846 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5544ms
 âœ“ Compiled in 1ms (6846 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 5482ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 2767ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 64ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 41ms
 âœ“ Compiled in 1909ms (8455 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (6846 modules)
 âœ“ Compiled in 1ms (6846 modules)
 âœ“ Compiled in 1ms (6846 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5699ms
 âœ“ Compiled in 0ms (6846 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 5550ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 2680ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 42ms
 âœ“ Compiled in 1982ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5625ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
 GET /es-MX/pools/new?step=3 200 in 5267ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 607ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 53ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 56ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 40ms
 âœ“ Compiled in 1510ms (7437 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 0ms (5832 modules)
 âœ“ Compiled in 1ms (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 4791ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
 GET /es-MX/pools/new?step=3 200 in 4433ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 369ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 41ms
 âœ“ Compiled in 1121ms (1605 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 136ms
 âœ“ Compiled in 1215ms (1605 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=3 200 in 292ms
 âœ“ Compiled in 7.5s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=4 200 in 795ms
 âœ“ Compiled in 2.7s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=4 200 in 1395ms
 âœ“ Compiled in 3.2s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=4 200 in 520ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 4.7s (3531 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 5605ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 334ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 1621ms (3567 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 2346ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 2.9s (4513 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 3682ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 5.9s (6123 modules)
 GET /es-MX/analytics 404 in 6110ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=4 200 in 356ms
 âœ“ Compiled in 3.4s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 517ms
 âœ“ Compiled in 1299ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 438ms
 âœ“ Compiled in 1378ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 317ms
 âœ“ Compiled in 1174ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 389ms
 âœ“ Compiled in 1427ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 332ms
 âœ“ Compiled in 2.2s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 414ms
 âœ“ Compiled in 1978ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 313ms
 âœ“ Compiled in 1222ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 685ms
 âœ“ Compiled in 1372ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 432ms
 âœ“ Compiled in 1158ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 397ms
 âœ“ Compiled in 1281ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 654ms
 âœ“ Compiled in 3s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 450ms
 âœ“ Compiled in 2.9s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 423ms
 âœ“ Compiled in 3s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 363ms
 âœ“ Compiled in 1219ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 376ms
 âœ“ Compiled in 1228ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 345ms
 âœ“ Compiled in 1107ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 368ms
 âœ“ Compiled in 1181ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 340ms
 âœ“ Compiled in 1122ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 363ms
 âœ“ Compiled in 2.1s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 500ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 5s (3531 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 5947ms
 âœ“ Compiled in 4.3s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 656ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 548ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 4.5s (3537 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 5981ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/access in 1594ms (5142 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (4484 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 5213ms
 GET /es-MX/access 200 in 5965ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 5.7s (6080 modules)
 GET /es-MX/analytics 404 in 5886ms
 âœ“ Compiled in 1807ms (6094 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 376ms
 âœ“ Compiled in 1359ms (6094 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 411ms
 âœ“ Compiled in 2.3s (6094 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 332ms
 âœ“ Compiled in 2.2s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 411ms
 âœ“ Compiled in 1365ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 385ms
 âœ“ Compiled in 1395ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 367ms
 âœ“ Compiled in 1470ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 322ms
 âœ“ Compiled in 1133ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 292ms
 âœ“ Compiled in 1177ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 1491ms
 âœ“ Compiled in 1733ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 411ms
 âœ“ Compiled in 1202ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 380ms
 âœ“ Compiled in 1477ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 697ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 4.5s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 388ms
 âœ“ Compiled in 1169ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 397ms
 âœ“ Compiled in 2s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 323ms
 âœ“ Compiled in 1613ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 1190ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1365ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 319ms
 âœ“ Compiled in 4.6s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 401ms
 âœ“ Compiled in 1321ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 371ms
 âœ“ Compiled in 1213ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 287ms
 âœ“ Compiled in 1111ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 372ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 4s (3531 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 4998ms
 âœ“ Compiled in 1256ms (5136 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 496ms
 âœ“ Compiled in 1303ms (5136 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 351ms
 âœ“ Compiled in 1247ms (5136 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 440ms
 âœ“ Compiled in 1269ms (5136 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 340ms
 âœ“ Compiled in 1989ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=5 200 in 610ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 550ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 4.3s (3537 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 5079ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 3.4s (4484 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 4249ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 3.1s (6094 modules)
 GET /es-MX/analytics 404 in 3283ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 302ms
 âœ“ Compiled in 3.5s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 443ms
 âœ“ Compiled in 1768ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 391ms
 âœ“ Compiled in 1242ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 374ms
 âœ“ Compiled in 1295ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 394ms
 âœ“ Compiled in 2.1s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 413ms
 âœ“ Compiled in 3.4s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 549ms
 âœ“ Compiled in 3.2s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 471ms
 âœ“ Compiled in 3.5s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 566ms
 âœ“ Compiled in 1301ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 305ms
 âœ“ Compiled in 1173ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 503ms
 âœ“ Compiled in 1193ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 449ms
 âœ“ Compiled in 1267ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 306ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1210ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 360ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 7.2s (5136 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 8369ms
 GET /es-MX/pools/new?step=6 200 in 391ms
 âœ“ Compiled in 1625ms (5136 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 341ms
 âœ“ Compiled in 1526ms (5136 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 473ms
 âœ“ Compiled in 1719ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 573ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 534ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/branding ...
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/branding in 4.7s (3537 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 5399ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 4.1s (4484 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 5036ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 2.9s (6089 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 323ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 4s (6080 modules)
 GET /es-MX/analytics 404 in 4255ms
 âœ“ Compiled in 1773ms (6094 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 378ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1548ms (6060 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 370ms
 âœ“ Compiled in 1289ms (5110 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 465ms
 âœ“ Compiled in 1202ms (5110 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 519ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 2.2s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 382ms
 âœ“ Compiled in 1178ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 375ms
 âœ“ Compiled in 1280ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 381ms
 âœ“ Compiled in 1242ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 380ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 2.4s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 417ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1275ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=6 200 in 322ms
 âœ“ Compiled in 6.4s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 368ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1226ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 379ms
 âœ“ Compiled in 1335ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 360ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1082ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 448ms
 âœ“ Compiled in 1186ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 929ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1516ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 360ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1138ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 353ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 14.7s (5832 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 20963ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 180ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing seasons for league 262
[Cache] SET: api-football:/leagues:id=262 (TTL: 60min)
 GET /api/trpc/poolWizard.listSeasons?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%7D%7D%7D 200 in 363ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Lig', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Lig (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Lig%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 423ms
[Cache] SET: api-football:/leagues:search=Liga (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 483ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga ', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Cache] SET: api-football:/leagues:search=Liga  (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 390ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga M', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga M (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20M%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 231ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga MX', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga MX (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20MX%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 242ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
 â—‹ Compiling /[locale]/pools ...
[Cache] CLEANUP: Removed 0 expired entries
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 2746ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/pools in 6.3s (5863 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 8303ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 5382ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 53ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 41ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 29ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 27ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 34ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[Cache] HIT: api-football:/fixtures:league=262&season=2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 70ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 38ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 39ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 5.5s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 1226ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 786ms (3531 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 1788ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 345ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 4.5s (3567 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 5180ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 3.9s (4513 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 4717ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 3.7s (6123 modules)
 GET /es-MX/analytics 404 in 3950ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 275ms
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 6.6s (3505 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 7487ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 201ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 265ms
 âœ“ Compiled in 7.3s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 611ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 11.5s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 467ms
 âœ“ Compiled in 1878ms (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 392ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 732ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 828ms (3505 modules)
 âœ“ Compiled (3536 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 4771ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 4866ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 391ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 5039ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/new 200 in 324ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 504ms
 GET /es-MX/pools/new 200 in 421ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /api/trpc/[trpc] in 2.8s (3572 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/access in 0ms (5901 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 5.2s (8443 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/analytics 404 in 6093ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 31634ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/new 200 in 29840ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/new 200 in 196ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 140ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing seasons for league 262
[Cache] SET: api-football:/leagues:id=262 (TTL: 60min)
 GET /api/trpc/poolWizard.listSeasons?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%7D%7D%7D 200 in 344ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 467ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 65ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 55ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 25ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 7.4s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 1014ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 7 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 16.6s (5105 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 655ms (1605 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 874ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 102ms
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 599ms (3505 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 883ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 197ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new?step=7 200 in 263ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools ...
 â¨¯ Failed to generate static paths for /[locale]/pools/new:
 âœ“ Compiled /[locale]/pools in 786ms (3536 modules)
TypeError: Cannot read properties of undefined (reading 'length')
    at <unknown> (C:\Users\victo\Documents\reactNextJS\quinielas\apps\admin\.next\server\app\[locale]\(authenticated)\pools\new\page.js:2292:47)
    at Object.<anonymous> (C:\Users\victo\Documents\reactNextJS\quinielas\apps\admin\.next\server\app\[locale]\(authenticated)\pools\new\page.js:2295:3) {
  type: 'TypeError'
}
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools 200 in 1841ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 2035ms
 GET /es-MX/pools/new?step=7 200 in 2430ms
 GET /es-MX/pools/new?step=7 200 in 2267ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /api/auth/session 200 in 1047ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 154ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 413ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 â—‹ Compiling /api/trpc/[trpc] ...
 GET /es-MX/pools 200 in 1732ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/branding in 14.9s (5865 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled (5901 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 29233ms
 GET /es-MX/branding 200 in 14962ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX 200 in 32158ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX 200 in 19619ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 â—‹ Compiling /_not-found ...
 GET /es-MX 200 in 565ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /_not-found in 8.4s (7511 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 0ms (5902 modules)
 âœ“ Compiled in 2.2s (7497 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 9970ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 3904ms
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 179ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 234ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 82ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[Cache] CLEANUP: Removed 0 expired entries
 GET /es-MX 200 in 536ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /favicon.ico 404 in 255ms
 GET /api/auth/session 200 in 108ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 147ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 66ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 359ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 401ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 355ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/access ...
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/access in 9.3s (6847 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 10033ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 816ms
 GET /es-MX 200 in 819ms
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 3.1s (8457 modules)
 GET /es-MX/analytics 404 in 3421ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/superadmin/templates ...
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/superadmin/templates in 14.3s (8483 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX 200 in 14707ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 118ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates 200 in 15996ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates 200 in 133ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 105ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 144ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 96ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/superadmin/templates/[id]/edit ...
[admin-middleware] Access granted for user with role: SUPERADMIN
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/superadmin/templates/[id]/edit in 6.8s (8494 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 260ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/cmh5atnls000zuvpk1qfdy6vp/edit 200 in 8231ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/cmh5atnls000zuvpk1qfdy6vp/edit 200 in 75ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/cmh5atnls000zuvpk1qfdy6vp/edit 200 in 106ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt" FROM "public"."TenantTemplateAssignment" WHERE "public"."TenantTemplateAssignment"."templateId" IN ($1) ORDER BY "public"."TenantTemplateAssignment"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh5atnls000zuvpk1qfdy6vp%22%7D%7D%7D 200 in 207ms
[Cache] CLEANUP: Removed 1 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 128ms
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 7 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 1 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 2 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 228ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 310ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 56ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
 GET /api/auth/session 200 in 112ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 48ms
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 232ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 127ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 230ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 132ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
 GET /api/auth/session 200 in 181ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 506ms
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 558ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 81ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 192ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 229ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 90ms
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 71ms
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 320ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 139ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 38ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 212ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 148ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
 GET /es-MX/pools 200 in 698ms
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 302ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 375ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 450ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 388ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/analytics 404 in 110ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes", COALESCE("aggr_selection_3_Invitation"."_aggr_count_invitations", 0) AS "_aggr_count_invitations", COALESCE("aggr_selection_4_ScoreAudit"."_aggr_count_scoreAudits", 0) AS "_aggr_count_scoreAudits", COALESCE("aggr_selection_5_LeaderboardSnapshot"."_aggr_count_leaderboards", 0) AS "_aggr_count_leaderboards" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_2_Prize" ON ("public"."Pool"."id" = "aggr_selection_2_Prize"."poolId") LEFT JOIN (SELECT "public"."Invitation"."poolId", COUNT(*) AS "_aggr_count_invitations" FROM "public"."Invitation" WHERE 1=1 GROUP BY "public"."Invitation"."poolId") AS "aggr_selection_3_Invitation" ON ("public"."Pool"."id" = "aggr_selection_3_Invitation"."poolId") LEFT JOIN (SELECT "public"."ScoreAudit"."poolId", COUNT(*) AS "_aggr_count_scoreAudits" FROM "public"."ScoreAudit" WHERE 1=1 GROUP BY "public"."ScoreAudit"."poolId") AS "aggr_selection_4_ScoreAudit" ON ("public"."Pool"."id" = "aggr_selection_4_ScoreAudit"."poolId") LEFT JOIN (SELECT "public"."LeaderboardSnapshot"."poolId", COUNT(*) AS "_aggr_count_leaderboards" FROM "public"."LeaderboardSnapshot" WHERE 1=1 GROUP BY "public"."LeaderboardSnapshot"."poolId") AS "aggr_selection_5_LeaderboardSnapshot" ON ("public"."Pool"."id" = "aggr_selection_5_LeaderboardSnapshot"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Pool Delete] Deleting pool cmh5axqtu00lauvpkybibjfn7 with: {
  registrations: 1,
  predictions: 0,
  prizes: 1,
  invitations: 1,
  scoreAudits: 0,
  leaderboards: 76,
  force: true
}
prisma:query DELETE FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) RETURNING "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt"
[Pool Delete] Successfully deleted pool cmh5axqtu00lauvpkybibjfn7
 POST /api/trpc/pools.delete?batch=1 200 in 109ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 54ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 85ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 157ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 186ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 71ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 160ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 193ms
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 198ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 120ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 67ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/cmh5atnls000zuvpk1qfdy6vp/edit 200 in 70ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt" FROM "public"."TenantTemplateAssignment" WHERE "public"."TenantTemplateAssignment"."templateId" IN ($1) ORDER BY "public"."TenantTemplateAssignment"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh5atnls000zuvpk1qfdy6vp%22%7D%7D%7D 200 in 84ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 332ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 325ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 269ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 349ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/analytics 404 in 54ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 41ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/cmh5atnls000zuvpk1qfdy6vp/edit 200 in 73ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt" FROM "public"."TenantTemplateAssignment" WHERE "public"."TenantTemplateAssignment"."templateId" IN ($1) ORDER BY "public"."TenantTemplateAssignment"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh5atnls000zuvpk1qfdy6vp%22%7D%7D%7D 200 in 38ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query BEGIN
prisma:query UPDATE "public"."PoolTemplate" SET "status" = CAST($1::text AS "public"."TemplateStatus"), "updatedAt" = $2 WHERE ("public"."PoolTemplate"."id" = $3 AND 1=1) RETURNING "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE "public"."PoolTemplate"."id" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query COMMIT
 POST /api/trpc/superadmin.templates.archive?batch=1 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt" FROM "public"."TenantTemplateAssignment" WHERE "public"."TenantTemplateAssignment"."templateId" IN ($1) ORDER BY "public"."TenantTemplateAssignment"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh5atnls000zuvpk1qfdy6vp%22%7D%7D%7D 200 in 69ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 41ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 114ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 117ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 58ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/superadmin/templates/new ...
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/superadmin/templates/new in 20.8s (7560 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 âœ“ Compiled in 1006ms (1638 modules)
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 579ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 318ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/new 200 in 22916ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new 200 in 144ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new 200 in 107ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 206ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 119ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Lig', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 485ms
[Cache] SET: api-football:/leagues:search=Lig (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Lig%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 577ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga ', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga  (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 366ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga m', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga m (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20m%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 238ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga mx', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga mx (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20mx%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 232ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing seasons for league 262
[Cache] SET: api-football:/leagues:id=262 (TTL: 60min)
 GET /api/trpc/poolWizard.listSeasons?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%7D%7D%7D 200 in 224ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%7D 200 in 484ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: undefined
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22roundLabel%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 84ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 55ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 29ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 25ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 43ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 48ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: undefined
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22roundLabel%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 39ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 4.6s (3577 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 933ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/pools 200 in 286ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 611ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 838ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 999ms (3608 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 2103ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=3 200 in 569ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/pools 200 in 615ms
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 1121ms (4549 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /es-MX/access 200 in 3479ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=3 200 in 505ms
 GET /es-MX/pools 200 in 522ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /_not-found ...
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /_not-found in 4.5s (6192 modules)
 GET /es-MX/analytics 404 in 4703ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 503ms
 GET /es-MX/pools 200 in 504ms
 â—‹ Compiling /api/trpc/[trpc] ...
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /api/trpc/[trpc] in 10.4s (4555 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1ms (6884 modules)
 âœ“ Compiled in 0ms (6884 modules)
 âœ“ Compiled in 1ms (6884 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 35219ms
 âœ“ Compiled in 1ms (6884 modules)
[Cache] CLEANUP: Removed 0 expired entries
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 38374ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=3 200 in 27933ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools 200 in 27978ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 0ms (6884 modules)
 âœ“ Compiled in 0ms (6884 modules)
 âœ“ Compiled in 0ms (6884 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 8095ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 6800ms
 GET /es-MX/pools 200 in 6714ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 6s (3577 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/superadmin/templates/new?step=3 200 in 1215ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 266ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 6.1s (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 566ms
 GET /es-MX/pools 200 in 571ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 6.1s (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 689ms
 GET /es-MX/pools 200 in 663ms
 âœ“ Compiled in 1535ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 642ms
 GET /es-MX/pools 200 in 645ms
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 6.5s (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1ms (5909 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 26364ms
 GET /es-MX/pools 200 in 26390ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 304ms
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 31220ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 489ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /es-MX/pools 200 in 951ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 127ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 94ms
 GET /es-MX/pools 200 in 306ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 158ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 176ms
 GET /es-MX/pools/new 200 in 411ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 67ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 91ms
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 5.8s (5940 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (5940 modules)
 âœ“ Compiled in 0ms (5940 modules)
 âœ“ Compiled in 0ms (5940 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /es-MX/branding 200 in 10331ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 9550ms
 âœ“ Compiled /[locale]/access in 0ms (5940 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 8832ms
 GET /es-MX/pools 200 in 8837ms
 âœ“ Compiled (6881 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 13456ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 18118ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=3 200 in 11289ms
 GET /es-MX/pools 200 in 11295ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 629ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 54ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 40ms
 âœ“ Compiled in 7.2s (8519 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (6881 modules)
 âœ“ Compiled in 0ms (6881 modules)
 âœ“ Compiled in 0ms (6881 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 9757ms
 âœ“ Compiled in 0ms (6881 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=3 200 in 6507ms
 GET /es-MX/pools 200 in 6527ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 3670ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 55ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 30ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 53ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: undefined
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22roundLabel%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 50ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 43ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: undefined
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22roundLabel%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 35ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 65ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[Cache] HIT: api-football:/fixtures:league=262&season=2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.listStages,poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 74ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 28ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 29ms
 âœ“ Compiled in 8.9s (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 695ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 241ms
 âœ“ Compiled in 1878ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 581ms
 GET /es-MX/pools 200 in 584ms
 âœ“ Compiled in 1872ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 612ms
 GET /es-MX/pools 200 in 620ms
 âœ“ Compiled in 1678ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 487ms
 GET /es-MX/pools 200 in 491ms
 âœ“ Compiled in 1561ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 618ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 296ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1653ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 499ms
 GET /es-MX/pools 200 in 503ms
 âœ“ Compiled in 1404ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 611ms
 GET /es-MX/pools 200 in 621ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1584ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 603ms
 GET /es-MX/pools 200 in 614ms
 âœ“ Compiled in 3.3s (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 521ms
 GET /es-MX/pools 200 in 527ms
 âœ“ Compiled in 8.9s (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 544ms
 GET /es-MX/pools 200 in 545ms
 âœ“ Compiled in 1631ms (5215 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 559ms
 GET /es-MX/pools 200 in 562ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 666ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 645ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 6.6s (3608 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 7480ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 5.3s (4549 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 5937ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 6.1s (6192 modules)
 GET /es-MX/analytics 404 in 6363ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 468ms
 GET /es-MX/pools 200 in 474ms
 âœ“ Compiled in 1695ms (6192 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 479ms
 GET /es-MX/pools 200 in 499ms
 âœ“ Compiled in 1785ms (6192 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/new?step=7 200 in 614ms
 GET /es-MX/pools 200 in 614ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /api/trpc/[trpc] in 14s (3582 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 29.6s (7549 modules)
 âœ“ Compiled in 1ms (5911 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 56891ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 56881ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=7 200 in 42805ms
 GET /es-MX/pools 200 in 42841ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /es-MX/superadmin/templates/new?step=7 200 in 228ms
 GET /api/auth/session 200 in 86ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 269ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 8.5s (5911 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1632ms (5911 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=7 200 in 3697ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 3756ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/superadmin/templates/new?step=7 200 in 390ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 255ms
 âœ“ Compiled in 1846ms (3577 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/superadmin/templates/new?step=7 200 in 762ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 242ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 5.8s (3582 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5911 modules)
 âœ“ Compiled in 1ms (5911 modules)
 âœ“ Compiled in 1ms (5911 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 23803ms
 âœ“ Compiled in 0ms (5911 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 27063ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=7 200 in 21261ms
 GET /es-MX/pools 200 in 14680ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5911 modules)
 âœ“ Compiled in 1ms (5911 modules)
 âœ“ Compiled in 0ms (5911 modules)
[admin-auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 10032ms
 âœ“ Compiled in 0ms (5911 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 9507ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 8424ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 7.3s (3577 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 858ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/pools 200 in 377ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 688ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 626ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/branding ...
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/branding in 8.2s (3608 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 9093ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 6.2s (4549 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 6989ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 6s (6192 modules)
 GET /es-MX/analytics 404 in 6228ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] CLEANUP: Removed 0 expired entries
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 582ms
 GET /es-MX/pools 200 in 584ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 13.4s (3582 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (5911 modules)
 âœ“ Compiled in 1ms (5911 modules)
 âœ“ Compiled in 1ms (5911 modules)
[admin-auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 44690ms
 GET /api/auth/session 200 in 15006ms
 âœ“ Compiled in 1ms (5911 modules)
[Cache] CLEANUP: Removed 0 expired entries
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 47532ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/superadmin/templates/new?step=7 200 in 33902ms
 GET /es-MX/pools 200 in 21228ms
 âœ“ Compiled in 0ms (5911 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 7808ms
 âœ“ Compiled in 0ms (5911 modules)
 âœ“ Compiled in 0ms (5911 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6869ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 0ms (5911 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 5819ms
 GET /es-MX/pools 200 in 5828ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 3134ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 25ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 321ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 349ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 22ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 85ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 182ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 89ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 3.6s (5911 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 2.5s (5911 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/templates/new?step=7 200 in 4828ms
 GET /es-MX/pools 200 in 4053ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 398ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 279ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 2134ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 2147ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 23ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 89ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 157ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 22ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 135ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 101ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 621ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[Cache] CLEANUP: Removed 0 expired entries
 GET /api/auth/session 200 in 1685ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 1855ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 78ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 229ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 205ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 40ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 5.8s (5911 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/new?step=7 200 in 651ms
 GET /es-MX/pools 200 in 653ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE ("public"."Sport"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Templates.create] Validating rounds: 16-16
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."name" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE ("public"."Season"."year" = $1 AND "public"."Season"."competitionId" IN ($2)) OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."round", "public"."Match"."seasonId" FROM "public"."Match" WHERE "public"."Match"."seasonId" IN ($1) OFFSET $2
[Templates.create] âœ… Found 9 existing matches in rounds 16-16
prisma:query BEGIN
prisma:query INSERT INTO "public"."PoolTemplate" ("id","slug","title","description","status","sportId","competitionExternalId","seasonYear","stageLabel","rules","accessDefaults","meta","createdAt","updatedAt") VALUES ($1,$2,$3,$4,CAST($5::text AS "public"."TemplateStatus"),$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."PoolTemplate"."id"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE "public"."PoolTemplate"."id" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[Templates.create] Template created: cmh6zk95f0001uvz8izbj37gk (liga-mx-j16)
 POST /api/trpc/superadmin.templates.create?batch=1 200 in 168ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/cmh6zk95f0001uvz8izbj37gk/edit 200 in 128ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt" FROM "public"."TenantTemplateAssignment" WHERE "public"."TenantTemplateAssignment"."templateId" IN ($1) ORDER BY "public"."TenantTemplateAssignment"."createdAt" DESC OFFSET $2
 GET /api/trpc/superadmin.templates.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh6zk95f0001uvz8izbj37gk%22%7D%7D%7D 200 in 48ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/new 200 in 71ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/new 200 in 59ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 50ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale] ...
 âœ“ Compiled /[locale] in 11.2s (5920 modules)
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 11601ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 366ms
 GET /es-MX 200 in 331ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 206ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates 200 in 243ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/trpc/superadmin.templates.list,superadmin.tenants.list,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 204ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1) ORDER BY "public"."Brand"."id" ASC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."TenantTemplateAssignment" ("id","tenantId","templateId","status","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6) RETURNING "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE "public"."ExternalSource"."slug" = $1 LIMIT $2 OFFSET $3
[TemplateProvision] Template config: competitionExternalId=262, seasonYear=2025, stageLabel=Apertura, roundLabel=null
[TemplateProvision] Template rules: {
  "rounds": {
    "end": 16,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "tieBreakers": [
    "EXACT_SCORES",
    "CORRECT_SIGNS"
  ],
  "goalDiffBonus": 1
}
[TemplateProvision] Fetching filtered season: stage=Apertura, round=null
[API-Football] Fetching season round for league 262, year 2025, stage=Apertura, round=undefined
[Cache] SET: api-football:/leagues:id=262&season=2025 (TTL: 60min)
[API-Football] Filtrando por etapa - jornada: "Apertura"
[API-Football] No se encontraron partidos para la etapa - jornada: "Apertura"
[Cache] SET: api-football:/fixtures:league=262&round=Apertura&season=2025 (TTL: 60min)
[TemplateProvision] Fetched 0 teams and 0 matches
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE ("public"."Competition"."sportId" = $1 AND "public"."Competition"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."Competition" ("id","sportId","slug","name","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6) RETURNING "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE ("public"."Season"."competitionId" = $1 AND "public"."Season"."year" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."Season" ("id","competitionId","name","year","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6) RETURNING "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt"
[TemplateProvision] Creating pool with rules: {
  "rounds": {
    "end": 16,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "tieBreakers": [
    "EXACT_SCORES",
    "CORRECT_SIGNS"
  ],
  "goalDiffBonus": 1
}
[TemplateProvision] âœ… Pool will filter matches by rounds: 16-16
prisma:query INSERT INTO "public"."Pool" ("id","tenantId","brandId","seasonId","name","slug","description","ruleSet","isActive","isPublic","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12) RETURNING "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt"
[TemplateProvision] âœ… Pool created: cmh6zlcc6000buvz83s380j5k (liga-mx-j16) with 0 matches
prisma:query INSERT INTO "public"."AccessPolicy" ("id","poolId","tenantId","accessType","requireCaptcha","requireEmailVerification","domainAllowList","registrationStartDate","registrationEndDate","windowStart","windowEnd","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."AccessType"),$5,$6,$7,$8,$9,$10,$11,$12,$13) RETURNING "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
prisma:query UPDATE "public"."TenantTemplateAssignment" SET "status" = $1, "result" = $2, "updatedAt" = $3 WHERE ("public"."TenantTemplateAssignment"."id" = $4 AND 1=1) RETURNING "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","actorId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 POST /api/trpc/superadmin.templates.assignToTenant?batch=1 200 in 662ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 57ms
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 2.4s (3542 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (3542 modules)
 âœ“ Compiled in 0ms (3542 modules)
 âœ“ Compiled in 0ms (3542 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 7342ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 7370ms
 âœ“ Compiled in 1ms (3542 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 6498ms
 GET /es-MX/pools 200 in 6549ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (3542 modules)
 âœ“ Compiled in 0ms (3542 modules)
 âœ“ Compiled in 1ms (3542 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6932ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/pools/[id] in 0ms (3542 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 9903ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /[locale]/pools/new ...
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/pools/new in 37.5s (8537 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 1ms (6877 modules)
 âœ“ Compiled in 0ms (6877 modules)
 âœ“ Compiled in 1ms (6877 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 34193ms
 GET /api/auth/session 200 in 32058ms
 GET /api/auth/session 200 in 14896ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 34246ms
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 32335ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 51791ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (6877 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 8430ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 3766ms
 GET /api/auth/session 200 in 3891ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 2996ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 80ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 97ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 40ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 83ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh6zlcc6000buvz83s380j5k%22%7D%7D%7D 200 in 185ms
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 1696ms (6893 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh6zlcc6000buvz83s380j5k%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 503ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 3145ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 875ms
 GET /es-MX/superadmin/templates 200 in 886ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /_not-found in 5s (8544 modules)
 GET /es-MX/analytics 404 in 5244ms
[Cache] CLEANUP: Removed 0 expired entries
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 244ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 559ms
 GET /api/auth/session 200 in 135ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 92ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh6zlcc6000buvz83s380j5k%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 206ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 117ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 218ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 32ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 47ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh6zlcc6000buvz83s380j5k%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 102ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 85ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 10.6s (4493 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 2.5s (4492 modules)
 âœ“ Compiled in 2.6s (4492 modules)
 âœ“ Compiled in 1ms (4492 modules)
 âœ“ Compiled in 0ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 8612ms
 âœ“ Compiled in 1ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 8451ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 0ms (4492 modules)
 âœ“ Compiled in 0ms (4492 modules)
 âœ“ Compiled in 0ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 6969ms
 âœ“ Compiled in 0ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 5981ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 0ms (4492 modules)
 âœ“ Compiled in 1ms (4492 modules)
 âœ“ Compiled in 1ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 6773ms
[Cache] CLEANUP: Removed 0 expired entries
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 5769ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 6.2s (2148 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 1024ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 286ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 1267ms (2153 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 3ms (4492 modules)
 âœ“ Compiled in 1ms (4492 modules)
 âœ“ Compiled in 0ms (4492 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 16102ms
 âœ“ Compiled in 0ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 18224ms
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 16805ms
 GET /es-MX/superadmin/templates 200 in 16827ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 0ms (4492 modules)
 âœ“ Compiled in 0ms (4492 modules)
 âœ“ Compiled in 0ms (4492 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 5841ms
 âœ“ Compiled in 0ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 5301ms
 GET /es-MX/superadmin/templates 200 in 5497ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 0ms (4492 modules)
 âœ“ Compiled in 1ms (4492 modules)
 âœ“ Compiled in 1ms (4492 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5077ms
 âœ“ Compiled in 1ms (4492 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 4753ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled /[locale]/pools/new in 0ms (4492 modules)
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/access in 0ms (6869 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 38.6s (8580 modules)
[admin-auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 72022ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 52055ms
 GET /api/auth/session 200 in 52058ms
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 âœ“ Compiled in 3.1s (6916 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 5843ms
 GET /es-MX/superadmin/templates 200 in 5848ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates 200 in 340ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 430ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 44s (6152 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/trpc/superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 32867ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh6zlcc6000buvz83s380j5k 200 in 488ms
 GET /es-MX/superadmin/templates 200 in 498ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 POST /api/trpc/superadmin.templates.delete?batch=1 400 in 49ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/auth/[...nextauth] ...
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/pools/new in 13.4s (4493 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/branding in 2ms (6870 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/access in 1ms (6900 modules)
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 â—‹ Compiling /_not-found ...
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /_not-found in 24.3s (8568 modules)
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 70836ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 65538ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh6zlcc6000buvz83s380j5k%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 71343ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 860ms
 GET /es-MX/superadmin/templates 200 in 58707ms
 GET /es-MX/pools 200 in 58712ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes", COALESCE("aggr_selection_3_Invitation"."_aggr_count_invitations", 0) AS "_aggr_count_invitations", COALESCE("aggr_selection_4_ScoreAudit"."_aggr_count_scoreAudits", 0) AS "_aggr_count_scoreAudits", COALESCE("aggr_selection_5_LeaderboardSnapshot"."_aggr_count_leaderboards", 0) AS "_aggr_count_leaderboards" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_2_Prize" ON ("public"."Pool"."id" = "aggr_selection_2_Prize"."poolId") LEFT JOIN (SELECT "public"."Invitation"."poolId", COUNT(*) AS "_aggr_count_invitations" FROM "public"."Invitation" WHERE 1=1 GROUP BY "public"."Invitation"."poolId") AS "aggr_selection_3_Invitation" ON ("public"."Pool"."id" = "aggr_selection_3_Invitation"."poolId") LEFT JOIN (SELECT "public"."ScoreAudit"."poolId", COUNT(*) AS "_aggr_count_scoreAudits" FROM "public"."ScoreAudit" WHERE 1=1 GROUP BY "public"."ScoreAudit"."poolId") AS "aggr_selection_4_ScoreAudit" ON ("public"."Pool"."id" = "aggr_selection_4_ScoreAudit"."poolId") LEFT JOIN (SELECT "public"."LeaderboardSnapshot"."poolId", COUNT(*) AS "_aggr_count_leaderboards" FROM "public"."LeaderboardSnapshot" WHERE 1=1 GROUP BY "public"."LeaderboardSnapshot"."poolId") AS "aggr_selection_5_LeaderboardSnapshot" ON ("public"."Pool"."id" = "aggr_selection_5_LeaderboardSnapshot"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Pool Delete] Deleting pool cmh6zlcc6000buvz83s380j5k with: {
  registrations: 0,
  predictions: 0,
  prizes: 0,
  invitations: 0,
  scoreAudits: 0,
  leaderboards: 2,
  force: true
}
prisma:query DELETE FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) RETURNING "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt"
[Pool Delete] Successfully deleted pool cmh6zlcc6000buvz83s380j5k
 POST /api/trpc/pools.delete?batch=1 200 in 88ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 33ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 91ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 137ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 70ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1) ORDER BY "public"."Brand"."id" ASC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."TenantTemplateAssignment" ("id","tenantId","templateId","status","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6) RETURNING "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE "public"."ExternalSource"."slug" = $1 LIMIT $2 OFFSET $3
[TemplateProvision] Template config: competitionExternalId=262, seasonYear=2025, stageLabel=Apertura, roundLabel=null
[TemplateProvision] Template rules: {
  "rounds": {
    "end": 16,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "tieBreakers": [
    "EXACT_SCORES",
    "CORRECT_SIGNS"
  ],
  "goalDiffBonus": 1
}
[TemplateProvision] Fetching filtered season: stage=Apertura, round=null
[API-Football] Fetching season round for league 262, year 2025, stage=Apertura, round=undefined
[Cache] SET: api-football:/leagues:id=262&season=2025 (TTL: 60min)
[API-Football] Filtrando por etapa - jornada: "Apertura"
[Cache] SET: api-football:/fixtures:league=262&round=Apertura&season=2025 (TTL: 60min)
[API-Football] No se encontraron partidos para la etapa - jornada: "Apertura"
[TemplateProvision] Fetched 0 teams and 0 matches
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."externalId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE ("public"."Competition"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[TemplateProvision] âœ… Found Competition via ExternalMap: cmh6zlcbj0005uvz8ivol2nlc (Liga MX)
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE ("public"."Season"."competitionId" = $1 AND "public"."Season"."year" = $2) LIMIT $3 OFFSET $4
[TemplateProvision] âœ… Reusing existing Season: cmh6zlcc20009uvz8hwfuiybq (Jornada #16)
[TemplateProvision] Starting match import: 0 matches to process
[TemplateProvision] Creating pool with rules: {
  "rounds": {
    "end": 16,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "tieBreakers": [
    "EXACT_SCORES",
    "CORRECT_SIGNS"
  ],
  "goalDiffBonus": 1
}
[TemplateProvision] âœ… Pool will filter matches by rounds: 16-16
prisma:query INSERT INTO "public"."Pool" ("id","tenantId","brandId","seasonId","name","slug","description","ruleSet","isActive","isPublic","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12) RETURNING "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt"
[TemplateProvision] âœ… Pool created: cmh703d9j000nuvz8bo41j9mt (liga-mx-j16) with 0 matches
prisma:query INSERT INTO "public"."AccessPolicy" ("id","poolId","tenantId","accessType","requireCaptcha","requireEmailVerification","domainAllowList","registrationStartDate","registrationEndDate","windowStart","windowEnd","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."AccessType"),$5,$6,$7,$8,$9,$10,$11,$12,$13) RETURNING "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
prisma:query UPDATE "public"."TenantTemplateAssignment" SET "status" = $1, "result" = $2, "updatedAt" = $3 WHERE ("public"."TenantTemplateAssignment"."id" = $4 AND 1=1) RETURNING "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","actorId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 POST /api/trpc/superadmin.templates.assignToTenant?batch=1 200 in 641ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
 GET /api/trpc/superadmin.templates.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 44ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 121ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 265ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
 GET /api/auth/session 200 in 254ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh703d9j000nuvz8bo41j9mt 200 in 117ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh703d9j000nuvz8bo41j9mt%22%7D%7D%7D 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh703d9j000nuvz8bo41j9mt%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 65ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 95ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 138ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 97ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/new 200 in 119ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 91ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Lig', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Lig (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Lig%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 488ms
[Cache] SET: api-football:/leagues:search=Liga (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 572ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga ', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga M', country: undefined, youthOnly: false, limit: 20 }
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing competitions { query: 'Liga MX', country: undefined, youthOnly: false, limit: 20 }
[Cache] SET: api-football:/leagues:search=Liga MX (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20MX%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 6892ms
[Cache] SET: api-football:/leagues:search=Liga  (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 7088ms
[Cache] SET: api-football:/leagues:search=Liga M (TTL: 60min)
 GET /api/trpc/poolWizard.listCompetitions?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22query%22%3A%22Liga%20M%22%2C%22youthOnly%22%3Afalse%2C%22limit%22%3A20%7D%7D%7D 200 in 7069ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing seasons for league 262
[Cache] SET: api-football:/leagues:id=262 (TTL: 60min)
 GET /api/trpc/poolWizard.listSeasons?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%7D%7D%7D 200 in 274ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Listing stages/rounds for league 262, season 2025
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
 GET /api/trpc/poolWizard.listStages?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%7D%7D%7D 200 in 278ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: undefined
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '1'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures,poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22roundLabel%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%221%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '10'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2210%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '11'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2211%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '12'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2212%22%7D%7D%7D 200 in 53ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '13'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2213%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '14'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2214%22%7D%7D%7D 200 in 26ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '15'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2215%22%7D%7D%7D 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '16'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2216%22%7D%7D%7D 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '2'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%222%22%7D%7D%7D 200 in 60ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '3'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%223%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '4'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%224%22%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '5'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%225%22%7D%7D%7D 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '6'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%226%22%7D%7D%7D 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '7'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%227%22%7D%7D%7D 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '8'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%228%22%7D%7D%7D 200 in 33ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '9'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%229%22%7D%7D%7D 200 in 39ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[API-Football] Previewing fixtures {
  competitionExternalId: '262',
  seasonYear: 2025,
  stageLabel: 'Apertura',
  roundLabel: '17'
}
[Cache] HIT: api-football:/fixtures:league=262&season=2025
 GET /api/trpc/poolWizard.previewFixtures?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22competitionExternalId%22%3A%22262%22%2C%22seasonYear%22%3A2025%2C%22stageLabel%22%3A%22Apertura%22%2C%22roundLabel%22%3A%2217%22%7D%7D%7D 200 in 57ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE ("public"."Sport"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Templates.create] Validating rounds: 17-17
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."name" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE ("public"."Season"."year" = $1 AND "public"."Season"."competitionId" IN ($2)) OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."round", "public"."Match"."seasonId" FROM "public"."Match" WHERE "public"."Match"."seasonId" IN ($1) OFFSET $2
[Templates.create] âœ… Found 9 existing matches in rounds 17-17
prisma:query BEGIN
prisma:query INSERT INTO "public"."PoolTemplate" ("id","slug","title","description","status","sportId","competitionExternalId","seasonYear","stageLabel","rules","accessDefaults","meta","createdAt","updatedAt") VALUES ($1,$2,$3,$4,CAST($5::text AS "public"."TemplateStatus"),$6,$7,$8,$9,$10,$11,$12,$13,$14) RETURNING "public"."PoolTemplate"."id"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE "public"."PoolTemplate"."id" = $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query COMMIT
[Templates.create] Template created: cmh705i6z000vuvz876r24k1d (liga-mx-j17)
 POST /api/trpc/superadmin.templates.create?batch=1 200 in 52ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/superadmin/templates/[id]/edit ...
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled /[locale]/superadmin/templates/[id]/edit in 10s (4499 modules)
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/superadmin/templates/cmh705i6z000vuvz876r24k1d/edit 200 in 10837ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /es-MX/pools/cmh703d9j000nuvz8bo41j9mt 200 in 450ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/templates/cmh705i6z000vuvz876r24k1d/edit 200 in 445ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt" FROM "public"."TenantTemplateAssignment" WHERE "public"."TenantTemplateAssignment"."templateId" IN ($1) ORDER BY "public"."TenantTemplateAssignment"."createdAt" DESC OFFSET $2
 GET /api/trpc/superadmin.templates.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh705i6z000vuvz876r24k1d%22%7D%7D%7D 200 in 592ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/new 200 in 86ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates/new 200 in 65ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE 1=1 ORDER BY "public"."Sport"."name" ASC OFFSET $1
 GET /api/trpc/sports.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 39ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 100ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 62ms
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/templates 200 in 87ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.list,superadmin.tenants.list,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 76ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1) ORDER BY "public"."Brand"."id" ASC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."TenantTemplateAssignment" ("id","tenantId","templateId","status","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6) RETURNING "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt" FROM "public"."PoolTemplate" WHERE ("public"."PoolTemplate"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."slug", "public"."Sport"."name", "public"."Sport"."createdAt", "public"."Sport"."updatedAt" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE "public"."ExternalSource"."slug" = $1 LIMIT $2 OFFSET $3
[TemplateProvision] Template config: competitionExternalId=262, seasonYear=2025, stageLabel=Apertura, roundLabel=null
[TemplateProvision] Template rules: {
  "rounds": {
    "end": 17,
    "start": 17
  },
  "exactScore": 5,
  "correctSign": 3,
  "tieBreakers": [
    "EXACT_SCORES",
    "CORRECT_SIGNS"
  ],
  "goalDiffBonus": 1
}
[TemplateProvision] Fetching filtered season: stage=Apertura, round=null
[API-Football] Fetching season round for league 262, year 2025, stage=Apertura, round=undefined
[Cache] SET: api-football:/leagues:id=262&season=2025 (TTL: 60min)
[API-Football] Filtrando por etapa - jornada: "Apertura"
[Cache] SET: api-football:/fixtures:league=262&round=Apertura&season=2025 (TTL: 60min)
[API-Football] No se encontraron partidos para la etapa - jornada: "Apertura"
[TemplateProvision] Fetched 0 teams and 0 matches
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."externalId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE ("public"."Competition"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[TemplateProvision] âœ… Found Competition via ExternalMap: cmh6zlcbj0005uvz8ivol2nlc (Liga MX)
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE ("public"."Season"."competitionId" = $1 AND "public"."Season"."year" = $2) LIMIT $3 OFFSET $4
[TemplateProvision] âœ… Reusing existing Season: cmh6zlcc20009uvz8hwfuiybq (Jornada #16)
[TemplateProvision] Starting match import: 0 matches to process
[TemplateProvision] Creating pool with rules: {
  "rounds": {
    "end": 17,
    "start": 17
  },
  "exactScore": 5,
  "correctSign": 3,
  "tieBreakers": [
    "EXACT_SCORES",
    "CORRECT_SIGNS"
  ],
  "goalDiffBonus": 1
}
[TemplateProvision] âœ… Pool will filter matches by rounds: 17-17
prisma:query INSERT INTO "public"."Pool" ("id","tenantId","brandId","seasonId","name","slug","description","ruleSet","isActive","isPublic","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12) RETURNING "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt"
[TemplateProvision] âœ… Pool created: cmh70620s0011uvz8j2qzo38g (liga-mx-j17) with 0 matches
prisma:query INSERT INTO "public"."AccessPolicy" ("id","poolId","tenantId","accessType","requireCaptcha","requireEmailVerification","domainAllowList","registrationStartDate","registrationEndDate","windowStart","windowEnd","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."AccessType"),$5,$6,$7,$8,$9,$10,$11,$12,$13) RETURNING "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
prisma:query UPDATE "public"."TenantTemplateAssignment" SET "status" = $1, "result" = $2, "updatedAt" = $3 WHERE ("public"."TenantTemplateAssignment"."id" = $4 AND 1=1) RETURNING "public"."TenantTemplateAssignment"."id", "public"."TenantTemplateAssignment"."tenantId", "public"."TenantTemplateAssignment"."templateId", "public"."TenantTemplateAssignment"."status", "public"."TenantTemplateAssignment"."result", "public"."TenantTemplateAssignment"."createdAt", "public"."TenantTemplateAssignment"."updatedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","actorId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 POST /api/trpc/superadmin.templates.assignToTenant?batch=1 200 in 685ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.templates.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 38ms
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 1419ms (4501 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (4501 modules)
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 0ms (4501 modules)
 âœ“ Compiled in 0ms (4501 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5485ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
 GET /api/trpc/fixtures.getExternalSources,fixtures.getBySeasonId,pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh703d9j000nuvz8bo41j9mt%22%7D%7D%7D 200 in 5520ms
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 0ms (4501 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh703d9j000nuvz8bo41j9mt 200 in 5641ms
 GET /es-MX/superadmin/templates 200 in 5646ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
 GET /api/auth/session 200 in 3292ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2) OFFSET $3
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 5189ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2) OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 1429ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 150ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2) OFFSET $3
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 40ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh70620s0011uvz8j2qzo38g 200 in 92ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh70620s0011uvz8j2qzo38g%22%7D%7D%7D 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh70620s0011uvz8j2qzo38g%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh70620s0011uvz8j2qzo38g%22%7D%7D%7D 200 in 53ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh70620s0011uvz8j2qzo38g%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 51ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE ("public"."Season"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE ("public"."ExternalSource"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."sourceId" = $1 AND "public"."ExternalMap"."entityType" = $2 AND "public"."ExternalMap"."entityId" = $3) LIMIT $4 OFFSET $5
[Sync] Fetching season data from api-football...
[Sync] Competition external ID: 262, Year: 2025
[API-Football] Fetching season for league 262, year 2025
[Cache] SET: api-football:/leagues:id=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/teams:league=262&season=2025 (TTL: 60min)
[Cache] SET: api-football:/fixtures:league=262&season=2025 (TTL: 60min)
[Sync] Received 18 teams and 153 matches
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query SELECT "public"."Team"."id", "public"."Team"."sportId", "public"."Team"."slug", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode", "public"."Team"."createdAt", "public"."Team"."updatedAt" FROM "public"."Team" WHERE ("public"."Team"."sportId" = $1 AND "public"."Team"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query BEGIN
prisma:query SELECT "public"."TeamSeason"."id" FROM "public"."TeamSeason" WHERE (("public"."TeamSeason"."teamId" = $1 AND "public"."TeamSeason"."seasonId" = $2) AND 1=1) OFFSET $3
prisma:query INSERT INTO "public"."TeamSeason" ("id","teamId","seasonId","createdAt") VALUES ($1,$2,$3,$4) RETURNING "public"."TeamSeason"."id"
prisma:query SELECT "public"."TeamSeason"."id", "public"."TeamSeason"."teamId", "public"."TeamSeason"."seasonId", "public"."TeamSeason"."createdAt" FROM "public"."TeamSeason" WHERE "public"."TeamSeason"."id" = $1 LIMIT $2 OFFSET $3
prisma:query COMMIT
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","finishedAt","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13,$14) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $15, "venue" = $16, "status" = CAST($17::text AS "public"."MatchStatus"), "homeScore" = $18, "awayScore" = $19, "finishedAt" = $20, "updatedAt" = $21 WHERE (("public"."Match"."seasonId" = $22 AND "public"."Match"."round" = $23 AND "public"."Match"."homeTeamId" = $24 AND "public"."Match"."awayTeamId" = $25) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
prisma:query INSERT INTO "public"."Match" ("id","seasonId","round","status","kickoffTime","homeTeamId","awayTeamId","homeScore","awayScore","venue","locked","createdAt","updatedAt") VALUES ($1,$2,$3,CAST($4::text AS "public"."MatchStatus"),$5,$6,$7,$8,$9,$10,$11,$12,$13) ON CONFLICT ("seasonId","round","homeTeamId","awayTeamId") DO UPDATE SET "kickoffTime" = $14, "venue" = $15, "status" = CAST($16::text AS "public"."MatchStatus"), "homeScore" = $17, "awayScore" = $18, "updatedAt" = $19 WHERE (("public"."Match"."seasonId" = $20 AND "public"."Match"."round" = $21 AND "public"."Match"."homeTeamId" = $22 AND "public"."Match"."awayTeamId" = $23) AND 1=1) RETURNING "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt"
prisma:query INSERT INTO "public"."ExternalMap" ("id","sourceId","entityType","entityId","externalId","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7) ON CONFLICT ("sourceId","entityType","externalId") DO UPDATE SET "entityId" = $8, "updatedAt" = $9 WHERE (("public"."ExternalMap"."sourceId" = $10 AND "public"."ExternalMap"."entityType" = $11 AND "public"."ExternalMap"."externalId" = $12) AND 1=1) RETURNING "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt"
[Sync] Successfully synced 153 matches
 POST /api/trpc/fixtures.syncSeasonFixtures?batch=1 200 in 1757ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
 GET /api/trpc/fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 111ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2) OFFSET $3
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 4492ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 GET /es-MX/pools/cmh703d9j000nuvz8bo41j9mt 200 in 343ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh703d9j000nuvz8bo41j9mt 200 in 155ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh703d9j000nuvz8bo41j9mt%22%7D%7D%7D 200 in 57ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh703d9j000nuvz8bo41j9mt%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 92ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 21.9s (6152 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh703d9j000nuvz8bo41j9mt%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 12483ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh703d9j000nuvz8bo41j9mt 200 in 704ms
 GET /es-MX/superadmin/templates 200 in 755ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2) OFFSET $3
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 65ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh70620s0011uvz8j2qzo38g 200 in 94ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh70620s0011uvz8j2qzo38g%22%7D%7D%7D 200 in 73ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 878ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getById,fixtures.getExternalSources,fixtures.getBySeasonId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh70620s0011uvz8j2qzo38g%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 136ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 2.3s (4493 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled in 1ms (4493 modules)
 âœ“ Compiled in 1ms (4493 modules)
 âœ“ Compiled in 1ms (4493 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6793ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 6836ms
 âœ“ Compiled in 0ms (4493 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/cmh70620s0011uvz8j2qzo38g 200 in 5979ms
 GET /es-MX/superadmin/templates 200 in 5991ms
[admin-middleware] Access granted for user with role: TENANT_ADMIN
[admin-middleware] Access granted for user with role: TENANT_ADMIN
 âœ“ Compiled /[locale]/pools/new in 1ms (4493 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5663ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalSource"."id", "public"."ExternalSource"."name", "public"."ExternalSource"."slug", "public"."ExternalSource"."createdAt", "public"."ExternalSource"."updatedAt" FROM "public"."ExternalSource" WHERE 1=1 ORDER BY "public"."ExternalSource"."name" ASC OFFSET $1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/fixtures.getExternalSources,fixtures.getBySeasonId,pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmh6zlcc20009uvz8hwfuiybq%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh70620s0011uvz8j2qzo38g%22%7D%7D%7D 200 in 5728ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 1ms (6870 modules)
[Cache] CLEANUP: Removed 0 expired entries
[admin-auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 46372ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: ivoka.localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://ivoka.localhost:3001
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 GET /api/auth/session 200 in 66747ms
 GET /api/auth/session 200 in 42288ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."PoolTemplate"."id" FROM "public"."PoolTemplate" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE "public"."Pool"."tenantId" = $1 ORDER BY "public"."Pool"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."PoolTemplate"."id", "public"."PoolTemplate"."slug", "public"."PoolTemplate"."title", "public"."PoolTemplate"."description", "public"."PoolTemplate"."status"::text, "public"."PoolTemplate"."sportId", "public"."PoolTemplate"."competitionExternalId", "public"."PoolTemplate"."seasonYear", "public"."PoolTemplate"."stageLabel", "public"."PoolTemplate"."roundLabel", "public"."PoolTemplate"."rules", "public"."PoolTemplate"."accessDefaults", "public"."PoolTemplate"."prizesDefaults", "public"."PoolTemplate"."brandHints", "public"."PoolTemplate"."meta", "public"."PoolTemplate"."createdAt", "public"."PoolTemplate"."updatedAt", COALESCE("aggr_selection_0_TenantTemplateAssignment"."_aggr_count_assignments", 0) AS "_aggr_count_assignments" FROM "public"."PoolTemplate" LEFT JOIN (SELECT "public"."TenantTemplateAssignment"."templateId", COUNT(*) AS "_aggr_count_assignments" FROM "public"."TenantTemplateAssignment" WHERE 1=1 GROUP BY "public"."TenantTemplateAssignment"."templateId") AS "aggr_selection_0_TenantTemplateAssignment" ON ("public"."PoolTemplate"."id" = "aggr_selection_0_TenantTemplateAssignment"."templateId") WHERE 1=1 ORDER BY "public"."PoolTemplate"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name", "public"."Sport"."slug" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
 GET /api/trpc/pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Atrue%7D%7D%7D 200 in 69185ms
 GET /api/trpc/auth.getSession,superadmin.templates.list,superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%2C%22status%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%2C%22status%22%3A%5B%22undefined%22%5D%7D%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A100%7D%7D%7D 200 in 63380ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 1055ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
