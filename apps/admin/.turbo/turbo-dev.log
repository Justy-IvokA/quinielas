
> @qp/admin@0.0.1 dev C:\Users\victo\Documents\reactNextJS\quinielas\apps\admin
> next dev --port 3001

   â–² Next.js 15.5.4
   - Local:        http://localhost:3001
   - Network:      http://192.168.100.3:3001
   - Environments: .env.local
   - Experiments (use with caution):
     Â· optimizePackageImports

 âœ“ Starting...
 âœ“ Ready in 7.3s
 âœ“ Compiled /middleware in 418ms (264 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale] ...
 âœ“ Compiled /[locale] in 9.8s (1605 modules)
 âœ“ Compiled in 882ms (546 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 13776ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /favicon.ico 404 in 383ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /api/trpc/[trpc] ...
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled /[locale]/pools in 10.3s (4000 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/pools/new ...
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 13029ms
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 13623ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled /[locale]/branding in 9.8s (6510 modules)
 âœ“ Compiled in 1090ms (680 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 10519ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 16349ms
 GET /es-MX/profile 200 in 7801ms
 GET /es-MX/branding 200 in 7572ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 7.8s (8461 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 10048ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 2.3s (8466 modules)
 GET /es-MX/analytics 404 in 2617ms
 âœ“ Compiled in 2.5s (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 732ms
 âœ“ Compiled in 921ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 483ms
 âœ“ Compiled in 1030ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 441ms
 âœ“ Compiled in 4.4s (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 426ms
 âœ“ Compiled in 1637ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 397ms
 âœ“ Compiled in 901ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 389ms
 âœ“ Compiled in 906ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 390ms
 âœ“ Compiled in 2.2s (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 502ms
 âœ“ Compiled in 972ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 377ms
 âœ“ Compiled in 1053ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 383ms
 âœ“ Compiled in 959ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 565ms
 âœ“ Compiled in 1100ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 336ms
 âœ“ Compiled in 1592ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 572ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 7.2s (3434 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 8227ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 220ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 184ms
[admin-middleware] Access granted for user with role: SUPERADMIN
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /en-US/profile 200 in 496ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /api/auth/[...nextauth] ...
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled /[locale]/pools in 2.1s (1097 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 1ms (1128 modules)
 âœ“ Compiled in 0ms (1128 modules)
 âœ“ Compiled in 1ms (1128 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5179ms
 âœ“ Compiled in 1ms (1128 modules)
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/pools 200 in 6192ms
 GET /en-US/profile 200 in 4811ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 2049ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 41ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 36ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 238ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 57ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 50ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 48ms
 â—‹ Compiling /[locale]/pools/new ...
 âœ“ Compiled /[locale]/pools/new in 6.2s (3556 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 8092ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/new 200 in 8507ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 1061ms (3592 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/branding 200 in 1791ms
[admin-middleware] Access granted for user with role: SUPERADMIN
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /en-US/profile 200 in 503ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 57ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 66ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 111ms
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 3.2s (2057 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 4243ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/access 200 in 4690ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 1594ms (3656 modules)
 GET /en-US/analytics 404 in 1829ms
 âœ“ Compiled in 3.2s (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /en-US/profile 200 in 915ms
 âœ“ Compiled in 1155ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /en-US/profile 200 in 754ms
 âœ“ Compiled in 968ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/profile 200 in 581ms
 âœ“ Compiled in 1771ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/profile 200 in 730ms
 âœ“ Compiled in 1261ms (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
Error: MISSING_MESSAGE: Could not resolve `profile` in messages for locale `en-US`.
    at async ProfilePage (app\[locale]\(authenticated)\profile\page.tsx:62:13)
  60 | export default async function ProfilePage({ params }: ProfilePageProps) {
  61 |   const { locale } = await params;
> 62 |   const t = await getTranslations({ locale, namespace: "profile" });
     |             ^
  63 |   
  64 |   // Get session (already verified by layout, but we need the user data)
  65 |   const session = await getServerAuthSession(authConfig); {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `profile` in messages for locale `en-US`.'
}
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/profile 200 in 671ms
 â¨¯ ./messages/en-US.json
Module parse failed: Cannot parse JSON: Unexpected non-whitespace character after JSON at position 17411 (line 515 column 4) while parsing '{
  "common": {
    "appName": "Quiniela'
You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders
Error: Cannot parse JSON: Unexpected non-whitespace character after JSON at position 17411 (line 515 column 4) while parsing '{
  "common": {
    "appName": "Quiniela'
Import trace for requested module:
./messages/en-US.json
./messages/ lazy ^\.\/.*\.json$ namespace object
./src/i18n/request.ts
../../node_modules/.pnpm/next-intl@4.3.12_next@15.5._335944c0fa09366d0b0f2928a7cc1fcd/node_modules/next-intl/dist/esm/development/server/react-server/getConfig.js
../../node_modules/.pnpm/next-intl@4.3.12_next@15.5._335944c0fa09366d0b0f2928a7cc1fcd/node_modules/next-intl/dist/esm/development/server/react-server/getFormatter.js
../../node_modules/.pnpm/next-intl@4.3.12_next@15.5._335944c0fa09366d0b0f2928a7cc1fcd/node_modules/next-intl/dist/esm/development/server.react-server.js
./app/[locale]/layout.tsx
 â¨¯ ./messages/en-US.json
Module parse failed: Cannot parse JSON: Unexpected non-whitespace character after JSON at position 17411 (line 515 column 4) while parsing '{
  "common": {
    "appName": "Quiniela'
You may need an appropriate loader to handle this file type, currently no loaders are configured to process this file. See https://webpack.js.org/concepts#loaders
Error: Cannot parse JSON: Unexpected non-whitespace character after JSON at position 17411 (line 515 column 4) while parsing '{
  "common": {
    "appName": "Quiniela'
Import trace for requested module:
./messages/en-US.json
./messages/ lazy ^\.\/.*\.json$ namespace object
./src/i18n/request.ts
../../node_modules/.pnpm/next-intl@4.3.12_next@15.5._335944c0fa09366d0b0f2928a7cc1fcd/node_modules/next-intl/dist/esm/development/server/react-server/getConfig.js
../../node_modules/.pnpm/next-intl@4.3.12_next@15.5._335944c0fa09366d0b0f2928a7cc1fcd/node_modules/next-intl/dist/esm/development/server/react-server/getFormatter.js
../../node_modules/.pnpm/next-intl@4.3.12_next@15.5._335944c0fa09366d0b0f2928a7cc1fcd/node_modules/next-intl/dist/esm/development/server.react-server.js
./app/[locale]/layout.tsx
 âœ“ Compiled in 301ms (1092 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /en-US/profile 200 in 369ms
 âœ“ Compiled in 267ms (1092 modules)
 âœ“ Compiled in 251ms (1092 modules)
 âœ“ Compiled in 2.5s (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /en-US/profile 200 in 409ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 921ms (1123 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /en-US/pools 200 in 2285ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /en-US/profile 200 in 597ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/pools/new ...
 âœ“ Compiled /[locale]/pools/new in 8.7s (5159 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
Error: MISSING_MESSAGE: Could not resolve `pools.new` in messages for locale `en-US`.
    at NewPoolPage (app\[locale]\(authenticated)\pools\new\page.tsx:12:28)
  10 |
  11 | export default function NewPoolPage() {
> 12 |   const t = useTranslations("pools.new");
     |                            ^
  13 |
  14 |   return (
  15 |     <div className="flex flex-col gap-6 [text-shadow:_2px_2px_4px_rgb(0_0_0_/_80%)]"> {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `pools.new` in messages for locale `en-US`.'
}
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/pools/new 200 in 9948ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /en-US/profile 200 in 2443ms
 â—‹ Compiling /[locale]/branding ...
 âœ“ Compiled /[locale]/branding in 3.8s (3587 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /en-US/branding 200 in 4881ms
 GET /en-US/profile 200 in 309ms
 âœ“ Compiled in 2.1s (2700 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/profile 200 in 667ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 2.1s (2052 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /en-US/access 200 in 3274ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /en-US/profile 200 in 837ms
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 1147ms (3651 modules)
 GET /en-US/analytics 404 in 1408ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /es-MX/profile 200 in 315ms
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /api/auth/[...nextauth] in 1864ms (2058 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 2518ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 59ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_memberships", 0) AS "_aggr_count_memberships", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_3_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."TenantMember"."userId", COUNT(*) AS "_aggr_count_memberships" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."userId") AS "aggr_selection_0_TenantMember" ON ("public"."User"."id" = "aggr_selection_0_TenantMember"."userId") LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_1_Registration" ON ("public"."User"."id" = "aggr_selection_1_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_2_Prediction" ON ("public"."User"."id" = "aggr_selection_2_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_3_PrizeAward" ON ("public"."User"."id" = "aggr_selection_3_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."userId" FROM "public"."Prediction" WHERE "public"."Prediction"."userId" IN ($1) OFFSET $2
 GET /api/auth/session 200 in 293ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 64ms
 GET /es-MX/profile 200 in 456ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 56ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 83ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 51ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 64ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 37ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 33ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 43ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 42ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 41ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 31ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 33ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 28ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 37ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 36ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 41ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 23ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 6.5s (3436 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 7459ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 1891ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/superadmin/tenants ...
 âœ“ Compiled /[locale]/superadmin/tenants in 3.7s (2728 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/superadmin/tenants 200 in 5342ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/tenants 200 in 133ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 832ms (3467 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 1360ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
 GET /api/trpc/superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 210ms
 GET /es-MX/superadmin/tenants 200 in 246ms
 âœ“ Compiled in 1376ms (5084 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 0ms (3467 modules)
 âœ“ Compiled in 0ms (3467 modules)
 âœ“ Compiled in 1ms (3467 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
 GET /api/trpc/superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 3447ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/tenants 200 in 3965ms
 âœ“ Compiled in 1547ms (5084 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 1ms (3467 modules)
 âœ“ Compiled in 1ms (3467 modules)
 âœ“ Compiled in 1ms (3467 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
 GET /api/trpc/superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 3371ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/tenants 200 in 3883ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/superadmin/tenants 200 in 180ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 3.1s (1130 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 1ms (3469 modules)
 âœ“ Compiled in 0ms (3469 modules)
 âœ“ Compiled in 1ms (3469 modules)
[admin-auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 5777ms
 âœ“ Compiled in 1ms (3469 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 6910ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/superadmin/tenants 200 in 3640ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 1ms (3469 modules)
 âœ“ Compiled in 2ms (3469 modules)
 âœ“ Compiled in 0ms (3469 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 3485ms
 âœ“ Compiled in 0ms (3469 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Tenant"."id" FROM "public"."Tenant" WHERE 1=1 OFFSET $1) AS "sub"
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_TenantMember"."_aggr_count_members", 0) AS "_aggr_count_members", COALESCE("aggr_selection_1_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."TenantMember"."tenantId", COUNT(*) AS "_aggr_count_members" FROM "public"."TenantMember" WHERE 1=1 GROUP BY "public"."TenantMember"."tenantId") AS "aggr_selection_0_TenantMember" ON ("public"."Tenant"."id" = "aggr_selection_0_TenantMember"."tenantId") LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_1_Pool" ON ("public"."Tenant"."id" = "aggr_selection_1_Pool"."tenantId") WHERE 1=1 ORDER BY "public"."Tenant"."createdAt" DESC LIMIT $1 OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."domains", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1,$2) OFFSET $3
 GET /api/trpc/superadmin.tenants.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22page%22%3A1%2C%22limit%22%3A20%2C%22search%22%3Anull%7D%2C%22meta%22%3A%7B%22values%22%3A%7B%22search%22%3A%5B%22undefined%22%5D%7D%7D%7D%7D 200 in 3333ms
 GET /en-US/superadmin/tenants 200 in 3357ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 2480ms
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 38ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/superadmin/tenants/[id]/brands/[brandId]/domains ...
 âœ“ Compiled /[locale]/superadmin/tenants/[id]/brands/[brandId]/domains in 3.9s (5091 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /en-US/superadmin/tenants/cmh86pzqh0007uv7848jbehhe/brands/cmh86pzqj0009uv785zr2r05x/domains 200 in 5247ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt", COALESCE("aggr_selection_0_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools" FROM "public"."Brand" LEFT JOIN (SELECT "public"."Pool"."brandId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."brandId") AS "aggr_selection_0_Pool" ON ("public"."Brand"."id" = "aggr_selection_0_Pool"."brandId") WHERE ("public"."Brand"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
 GET /api/trpc/superadmin.brands.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh86pzqj0009uv785zr2r05x%22%7D%7D%7D 200 in 122ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/superadmin/tenants/[id] ...
 âœ“ Compiled /[locale]/superadmin/tenants/[id] in 2.9s (5102 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /en-US/superadmin/tenants/cmh86pzqh0007uv7848jbehhe 200 in 5122ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /en-US/superadmin/tenants/cmh86pzqh0007uv7848jbehhe 200 in 185ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."TenantFeatureOverride"."id", "public"."TenantFeatureOverride"."tenantId", "public"."TenantFeatureOverride"."feature"::text, "public"."TenantFeatureOverride"."isEnabled", "public"."TenantFeatureOverride"."expiresAt", "public"."TenantFeatureOverride"."createdAt", "public"."TenantFeatureOverride"."updatedAt" FROM "public"."TenantFeatureOverride" WHERE "public"."TenantFeatureOverride"."tenantId" = $1 ORDER BY "public"."TenantFeatureOverride"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_0_Pool" ON ("public"."Tenant"."id" = "aggr_selection_0_Pool"."tenantId") LEFT JOIN (SELECT "public"."Registration"."tenantId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."tenantId") AS "aggr_selection_1_Registration" ON ("public"."Tenant"."id" = "aggr_selection_1_Registration"."tenantId") LEFT JOIN (SELECT "public"."Prediction"."tenantId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."tenantId") AS "aggr_selection_2_Prediction" ON ("public"."Tenant"."id" = "aggr_selection_2_Prediction"."tenantId") WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."logoUrl", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."tenantId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."TenantFeatureOverride"."id", "public"."TenantFeatureOverride"."tenantId", "public"."TenantFeatureOverride"."feature"::text, "public"."TenantFeatureOverride"."isEnabled", "public"."TenantFeatureOverride"."expiresAt", "public"."TenantFeatureOverride"."createdAt", "public"."TenantFeatureOverride"."updatedAt" FROM "public"."TenantFeatureOverride" WHERE "public"."TenantFeatureOverride"."tenantId" IN ($1) OFFSET $2
 GET /api/trpc/tenant.getById,tenant.listFeatureOverrides?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh86pzqh0007uv7848jbehhe%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22tenantId%22%3A%22cmh86pzqh0007uv7848jbehhe%22%7D%7D%7D 200 in 196ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/tenants/cmh86pzqh0007uv7848jbehhe 200 in 278ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /[locale]/pools ...
 âœ“ Compiled /[locale]/pools in 1043ms (3492 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 0ms (3517 modules)
 âœ“ Compiled in 0ms (3517 modules)
 âœ“ Compiled in 0ms (3517 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 4726ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 4696ms
 âœ“ Compiled in 0ms (3517 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/tenants/cmh86pzqh0007uv7848jbehhe 200 in 5555ms
 GET /es-MX/pools 200 in 6644ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled /[locale]/pools/new in 1ms (3517 modules)
 âœ“ Compiled in 0ms (5922 modules)
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
 âœ“ Compiled in 1ms (5922 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 13038ms
 âœ“ Compiled /[locale]/branding in 0ms (5922 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/tenants/cmh86pzqh0007uv7848jbehhe 200 in 12862ms
 âœ“ Compiled in 0ms (5958 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 âœ“ Compiled in 0ms (5958 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."TenantFeatureOverride"."id", "public"."TenantFeatureOverride"."tenantId", "public"."TenantFeatureOverride"."feature"::text, "public"."TenantFeatureOverride"."isEnabled", "public"."TenantFeatureOverride"."expiresAt", "public"."TenantFeatureOverride"."createdAt", "public"."TenantFeatureOverride"."updatedAt" FROM "public"."TenantFeatureOverride" WHERE "public"."TenantFeatureOverride"."tenantId" = $1 ORDER BY "public"."TenantFeatureOverride"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt", COALESCE("aggr_selection_0_Pool"."_aggr_count_pools", 0) AS "_aggr_count_pools", COALESCE("aggr_selection_1_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_2_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Tenant" LEFT JOIN (SELECT "public"."Pool"."tenantId", COUNT(*) AS "_aggr_count_pools" FROM "public"."Pool" WHERE 1=1 GROUP BY "public"."Pool"."tenantId") AS "aggr_selection_0_Pool" ON ("public"."Tenant"."id" = "aggr_selection_0_Pool"."tenantId") LEFT JOIN (SELECT "public"."Registration"."tenantId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."tenantId") AS "aggr_selection_1_Registration" ON ("public"."Tenant"."id" = "aggr_selection_1_Registration"."tenantId") LEFT JOIN (SELECT "public"."Prediction"."tenantId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."tenantId") AS "aggr_selection_2_Prediction" ON ("public"."Tenant"."id" = "aggr_selection_2_Prediction"."tenantId") WHERE ("public"."Tenant"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."logoUrl", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."tenantId" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" IN ($1) OFFSET $2
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId", "public"."TenantMember"."userId", "public"."TenantMember"."role"::text, "public"."TenantMember"."createdAt" FROM "public"."TenantMember" WHERE "public"."TenantMember"."tenantId" IN ($1) ORDER BY "public"."TenantMember"."createdAt" DESC OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."createdAt" FROM "public"."User" WHERE "public"."User"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."TenantFeatureOverride"."id", "public"."TenantFeatureOverride"."tenantId", "public"."TenantFeatureOverride"."feature"::text, "public"."TenantFeatureOverride"."isEnabled", "public"."TenantFeatureOverride"."expiresAt", "public"."TenantFeatureOverride"."createdAt", "public"."TenantFeatureOverride"."updatedAt" FROM "public"."TenantFeatureOverride" WHERE "public"."TenantFeatureOverride"."tenantId" IN ($1) OFFSET $2
 GET /api/trpc/tenant.getById,tenant.listFeatureOverrides?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh86pzqh0007uv7848jbehhe%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22tenantId%22%3A%22cmh86pzqh0007uv7848jbehhe%22%7D%7D%7D 200 in 8450ms
 âœ“ Compiled in 1ms (5958 modules)
[admin-auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
 GET /api/auth/session 200 in 7570ms
 âœ“ Compiled in 0ms (5958 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /es-MX/branding 200 in 9593ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX/superadmin/tenants/cmh86pzqh0007uv7848jbehhe 200 in 7890ms
 âœ“ Compiled in 0ms (5958 modules)
 âœ“ Compiled in 0ms (5958 modules)
 âœ“ Compiled in 0ms (5958 modules)
[admin-auth-route] GET Request
[admin-auth-route] Host header: localhost:3001
[admin-auth-route] Request URL: http://localhost:3001/api/auth/session
[admin-auth-route] Setting AUTH_URL to: http://localhost:3001
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5703ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/superadmin/tenants/cmh86pzqh0007uv7848jbehhe 200 in 5138ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 92ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 117ms
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
 GET /es-MX/branding 200 in 85ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/branding.getCurrentBrand?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 52ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[updateBrandTheme] Existing theme logo: {
  alt: 'Innotecnia Logo',
  url: 'https://storage.googleapis.com/rodsardb.firebasestorage.app/innotecnia/logo/1761333121060-uo7afe-innobanner-640-light.png'
}
[updateBrandTheme] Input theme logo: {
  url: 'https://storage.googleapis.com/rodsardb.firebasestorage.app/innotecnia/logo/1761333121060-uo7afe-innobanner-640-light.png',
  alt: 'Innotecnia Logo'
}
[updateBrandTheme] Updated theme logo: {
  alt: 'Innotecnia Logo',
  url: 'https://storage.googleapis.com/rodsardb.firebasestorage.app/innotecnia/logo/1761333121060-uo7afe-innobanner-640-light.png'
}
prisma:query UPDATE "public"."Brand" SET "theme" = $1, "updatedAt" = $2 WHERE ("public"."Brand"."id" = $3 AND 1=1) RETURNING "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","actorId","action","ipAddress","userAgent","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 POST /api/trpc/branding.updateBrandTheme?batch=1 200 in 86ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/branding.getCurrentBrand?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 56ms
[admin-middleware] Access granted for user with role: SUPERADMIN
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prize"."_aggr_count_prizes", 0) AS "_aggr_count_prizes" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prize"."poolId", COUNT(*) AS "_aggr_count_prizes" FROM "public"."Prize" WHERE 1=1 GROUP BY "public"."Prize"."poolId") AS "aggr_selection_1_Prize" ON ("public"."Pool"."id" = "aggr_selection_1_Prize"."poolId") WHERE ("public"."Pool"."tenantId" = $1 AND "public"."Pool"."isActive" = $2) ORDER BY "public"."Pool"."createdAt" DESC OFFSET $3
 GET /api/trpc/health,pools.listByTenant?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22includeInactive%22%3Afalse%7D%7D%7D 200 in 100ms
 â—‹ Compiling /[locale]/access ...
 âœ“ Compiled /[locale]/access in 7.4s (4480 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[admin-middleware] Access granted for user with role: SUPERADMIN
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."licenseTier"::text, "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/access 200 in 9254ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 GET /es-MX 200 in 406ms
[admin-middleware] Access granted for user with role: SUPERADMIN
 â—‹ Compiling /_not-found ...
 âœ“ Compiled /_not-found in 2.9s (6068 modules)
 GET /es-MX/analytics 404 in 3129ms
