
> @qp/web@0.0.1 dev C:\Users\victo\Documents\reactNextJS\quinielas\apps\web
> next dev --port 3000

   ▲ Next.js 15.5.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.100.3:3000
   - Environments: .env.local
   - Experiments (use with caution):
     · optimizePackageImports

 ✓ Starting...
 ✓ Ready in 11.2s
 ○ Compiling /middleware ...
 ✓ Compiled /middleware in 1879ms (208 modules)
 ○ Compiling /[locale] ...
<w> [webpack.cache.PackFileCacheStrategy] Serializing big strings (128kiB) impacts deserialization performance (consider using Buffer instead and decode when needed)
 ✓ Compiled /[locale] in 23.5s (1437 modules)
 ✓ Compiled in 764ms (559 modules)
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."domains" @> $1 LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 ⨯ TypeError: Cannot read properties of undefined (reading 'paragraph')
    at HomeHero (app\components\home-hero.tsx:137:34)
  135 |                 <div className="relative z-10 text-center text-white max-w-md px-4 animate-[fadeIn_0.5s_ease-out]">
  136 |                   <p className="text-sm md:text-2xl leading-relaxed font-medium drop-shadow-lg line-clamp-7 md:line-clamp-none">
> 137 |                     {brandTheme?.text.paragraph || tagline}
      |                                  ^
  138 |                   </p>
  139 |                 </div>
  140 |               </div> {
  digest: '752702303'
}
 GET /es-MX 200 in 26855ms
 ○ Compiling /api/auth/[...nextauth] ...
 ✓ Compiled /api/auth/[...nextauth] in 2.1s (1578 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /service-worker.js 404 in 328ms
[auth-route] GET Request
[auth-route] Host header: localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://localhost:3000
 GET /api/auth/session 200 in 3881ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 1554ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 161ms
 ○ Compiling /api/trpc/[trpc] ...
 ✓ Compiled /[locale]/[poolSlug] in 19.1s (3658 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /es-MX/pools 200 in 8856ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 20229ms
 GET /android-chrome-192x192.png 404 in 20388ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 24136ms
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 23998ms
 GET /es-MX/auth/signin 200 in 17386ms
 GET /es-MX/leaderboard 200 in 3743ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 193ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 282ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 349ms
 GET /es-MX/rules 200 in 458ms
 ○ Compiling /[locale]/dashboard ...
 ✓ Compiled /[locale]/dashboard in 8.6s (4824 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 8946ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 10665ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 84ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 42ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 47ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 46ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 58ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 28ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 673ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 36ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 218ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/health,auth.getSession,user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 207 in 143ms
 GET /es-MX/auth/signin 200 in 626ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 291ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 450ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 87ms
 GET /es-MX/leaderboard 200 in 424ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 232ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 243ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 176ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND 1=1 AND ("j0"."tenantId" = $4 AND "j0"."isActive" = $5 AND ("j0"."id" IS NOT NULL))) OFFSET $6
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE (1=0 AND "public"."Match"."status" = CAST($1::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $2) GROUP BY "public"."Match"."seasonId" OFFSET $3
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 215ms
 GET /android-chrome-192x192.png 404 in 235ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 106ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND 1=1 AND ("j0"."tenantId" = $4 AND "j0"."isActive" = $5 AND ("j0"."id" IS NOT NULL))) OFFSET $6
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE (1=0 AND "public"."Match"."status" = CAST($1::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $2) GROUP BY "public"."Match"."seasonId" OFFSET $3
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 160ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 135ms
 ○ Compiling /[locale]/auth/register/[poolSlug] ...
 ✓ Compiled /[locale]/auth/register/[poolSlug] in 6s (5690 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /es-MX/dashboard 200 in 309ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 233ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" = $2 AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $3) LIMIT $4 OFFSET $5
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" IS NULL AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/register/ligamxj14 200 in 8354ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 239ms
 GET /android-chrome-192x192.png 404 in 310ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC LIMIT $2 OFFSET $3
 GET /api/trpc/registration.hasExistingData?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22userId%22%3A%22cmgyi6fhj000guvdkchslp4w3%22%7D%7D%7D 200 in 223ms
 GET /api/auth/session 200 in 208ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 266ms
 GET /es-MX/auth/signin 200 in 416ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 380ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 400ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 131ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 296ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 179ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 404 in 35ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."Registration" ("id","poolId","userId","tenantId","displayName","email","emailVerified","phone","phoneVerified","joinedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt"
prisma:error 
Invalid `prisma.registration.create()` invocation:


Foreign key constraint violated on the (not available)
 POST /api/trpc/registration.registerPublic?batch=1 500 in 88ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."Registration" ("id","poolId","userId","tenantId","displayName","email","emailVerified","phone","phoneVerified","joinedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt"
prisma:error 
Invalid `prisma.registration.create()` invocation:


Foreign key constraint violated on the (not available)
 POST /api/trpc/registration.registerPublic?batch=1 500 in 56ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/csrf
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/csrf 200 in 37ms
[auth-route] POST Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/signout
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 POST /api/auth/signout 200 in 27ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 368ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 50ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 125ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 337ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" = $2 AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $3) LIMIT $4 OFFSET $5
 GET /android-chrome-192x192.png 404 in 605ms
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" IS NULL AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 676ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 264ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 229ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 226ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 266ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" = $2 AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $3) LIMIT $4 OFFSET $5
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" IS NULL AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 105ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 148ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/providers
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/providers 200 in 22ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/csrf
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/csrf 200 in 23ms
[auth-route] POST Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/signin/email
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[90m[auth][debug]:[0m adapter_getUserByEmail {
  "args": [
    "chronos.devs@gmail.com"
  ]
}
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
[auth] sendVerificationRequest called
[auth] Email: chronos.devs@gmail.com
[auth] Generated URL: http://ivoka.localhost:3000/api/auth/callback/email?callbackUrl=http%3A%2F%2Fivoka.localhost%3A3000%2Fes-MX%2Fdashboard&token=0ba00544c7789565697427cfa89adc3395c721f0a2748a9b4f1b3c3444fa7eac&email=chronos.devs%40gmail.com
[auth] Host from URL: ivoka.localhost:3000
[90m[auth][debug]:[0m adapter_createVerificationToken {
  "args": [
    {
      "identifier": "chronos.devs@gmail.com",
      "token": "d014b653dfa2feb0d1ce5fe922bd682aca4de467c7e46b5ef8e63e21fbdfd919",
      "expires": "2025-10-22T01:50:46.954Z"
    }
  ]
}
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."VerificationToken" ("identifier","token","expires") VALUES ($1,$2,$3) RETURNING "public"."VerificationToken"."token", "public"."VerificationToken"."identifier", "public"."VerificationToken"."expires"
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE "public"."Brand"."tenantId" = $1 ORDER BY "public"."Brand"."createdAt" ASC LIMIT $2 OFFSET $3
[auth] Found brand: Ivoka
prisma:query SELECT "public"."User"."id", "public"."User"."metadata" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."tenantId" = $1 AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
[auth] Sending magic link email with branding
 POST /api/auth/signin/email? 200 in 3598ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 23ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/callback/email?callbackUrl=http%3A%2F%2Fivoka.localhost%3A3000%2Fes-MX%2Fdashboard&token=0ba00544c7789565697427cfa89adc3395c721f0a2748a9b4f1b3c3444fa7eac&email=chronos.devs%40gmail.com
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[90m[auth][debug]:[0m adapter_useVerificationToken {
  "args": [
    {
      "identifier": "chronos.devs@gmail.com",
      "token": "d014b653dfa2feb0d1ce5fe922bd682aca4de467c7e46b5ef8e63e21fbdfd919"
    }
  ]
}
prisma:query SELECT 1
prisma:query DELETE FROM "public"."VerificationToken" WHERE (("public"."VerificationToken"."identifier" = $1 AND "public"."VerificationToken"."token" = $2) AND 1=1) RETURNING "public"."VerificationToken"."token", "public"."VerificationToken"."identifier", "public"."VerificationToken"."expires"
[90m[auth][debug]:[0m adapter_getUserByEmail {
  "args": [
    "chronos.devs@gmail.com"
  ]
}
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
[90m[auth][debug]:[0m adapter_getUserByEmail {
  "args": [
    "chronos.devs@gmail.com"
  ]
}
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt" FROM "public"."User" WHERE ("public"."User"."email" = $1 AND 1=1) LIMIT $2 OFFSET $3
[90m[auth][debug]:[0m adapter_updateUser {
  "args": [
    {
      "id": "cmgzgs6bq000guvzgn36t1zeo",
      "emailVerified": "2025-10-21T01:51:04.415Z"
    }
  ]
}
prisma:query UPDATE "public"."User" SET "emailVerified" = $1, "updatedAt" = $2 WHERE ("public"."User"."id" = $3 AND 1=1) RETURNING "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt"
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."role"::text, "public"."TenantMember"."tenantId" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" = $1 OFFSET $2
prisma:query UPDATE "public"."User" SET "lastSignInAt" = $1, "updatedAt" = $2 WHERE ("public"."User"."id" = $3 AND 1=1) RETURNING "public"."User"."id", "public"."User"."email", "public"."User"."emailVerified", "public"."User"."image", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."name", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."updatedAt", "public"."User"."lastSignInAt"
prisma:query SELECT "public"."TenantMember"."id", "public"."TenantMember"."tenantId" FROM "public"."TenantMember" WHERE "public"."TenantMember"."userId" = $1 LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","actorId","userId","action","metadata","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 GET /api/auth/callback/email?callbackUrl=http%3A%2F%2Fivoka.localhost%3A3000%2Fes-MX%2Fdashboard&token=0ba00544c7789565697427cfa89adc3395c721f0a2748a9b4f1b3c3444fa7eac&email=chronos.devs%40gmail.com 302 in 63ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 343ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 229ms
 GET /android-chrome-192x192.png 404 in 253ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND 1=1 AND ("j0"."tenantId" = $4 AND "j0"."isActive" = $5 AND ("j0"."id" IS NOT NULL))) OFFSET $6
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE (1=0 AND "public"."Match"."status" = CAST($1::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $2) GROUP BY "public"."Match"."seasonId" OFFSET $3
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 132ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 93ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 224ms
 GET /es-MX/auth/signin 200 in 362ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 256ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 229ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 196ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 190ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 195ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 139ms
 GET /android-chrome-192x192.png 404 in 173ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 263ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 164ms
 GET /android-chrome-192x192.png 404 in 230ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND 1=1 AND ("j0"."tenantId" = $4 AND "j0"."isActive" = $5 AND ("j0"."id" IS NOT NULL))) OFFSET $6
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE (1=0 AND "public"."Match"."status" = CAST($1::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $2) GROUP BY "public"."Match"."seasonId" OFFSET $3
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 220ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 228ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 455ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 440ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 433ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 273ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 213ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" = $2 AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $3) LIMIT $4 OFFSET $5
prisma:query SELECT "public"."Setting"."id", "public"."Setting"."scope"::text, "public"."Setting"."tenantId", "public"."Setting"."poolId", "public"."Setting"."key", "public"."Setting"."value", "public"."Setting"."createdAt", "public"."Setting"."updatedAt" FROM "public"."Setting" WHERE ("public"."Setting"."scope" = CAST($1::text AS "public"."SettingScope") AND "public"."Setting"."tenantId" IS NULL AND "public"."Setting"."poolId" IS NULL AND "public"."Setting"."key" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/register/ligamxj14 200 in 522ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."userId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/registration.hasExistingData,user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22userId%22%3A%22cmgzgs6bq000guvzgn36t1zeo%22%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 125ms
 GET /es-MX/auth/signin 200 in 334ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 274ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 227ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 264ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 211ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query INSERT INTO "public"."Registration" ("id","poolId","userId","tenantId","displayName","email","emailVerified","phone","phoneVerified","joinedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10) RETURNING "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt"
prisma:query INSERT INTO "public"."AuditLog" ("id","tenantId","userId","action","metadata","resourceType","resourceId","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) RETURNING "public"."AuditLog"."id", "public"."AuditLog"."tenantId", "public"."AuditLog"."actorId", "public"."AuditLog"."userId", "public"."AuditLog"."action", "public"."AuditLog"."ipAddress", "public"."AuditLog"."userAgent", "public"."AuditLog"."metadata", "public"."AuditLog"."resourceType", "public"."AuditLog"."resourceId", "public"."AuditLog"."createdAt"
 POST /api/trpc/registration.registerPublic?batch=1 200 in 57ms
 ○ Compiling /[locale]/pools/[slug]/fixtures ...
 ✓ Compiled /[locale]/pools/[slug]/fixtures in 3.8s (5781 modules)
prisma:query SELECT 1
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5442ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 225ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 343ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 357ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 50ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 148ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 211ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 130ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 47ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/prizes.listByPool,pools.getById,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 69ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%7D 200 in 63ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason,prizes.listByPool,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%224%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 126ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 33ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 55ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason,prizes.listByPool,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%224%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason,prizes.listByPool,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%224%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 72ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 135ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 66ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 619ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 117ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 174ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 108ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 80ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 688ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 182ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 204ms
 GET /api/auth/session 200 in 254ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 71ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/prizes.listByPool,pools.getById,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 54ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%7D 200 in 59ms
 ○ Compiling /_not-found ...
 ✓ Compiled /_not-found in 3.8s (5766 modules)
 GET /es-MX/pools/ligamxj14/register 404 in 4180ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
🔍 External Map Debug: {
  competitionId: 'cmgzvjf1e000euvakfui9kspz',
  externalMap: undefined,
  leagueId: undefined,
  season: 2025
}
 GET /es-MX/pools/ligamxj14/fixtures 200 in 739ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 2.3s (4164 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 4561ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 4516ms
 GET /android-chrome-192x192.png 404 in 4974ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 152ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 182ms
 GET /es-MX/auth/signin 200 in 4515ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 291ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 250ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 180ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 178ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 81ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 228ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 130ms
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 754ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 127ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 156ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 250ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 86ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/prizes.listByPool,pools.getById,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 56ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%7D 200 in 57ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 26ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 70ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1) OFFSET $2
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 53ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2) OFFSET $3
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 61ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3) OFFSET $4
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4) OFFSET $5
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4) OFFSET $5
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4) OFFSET $5
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 41ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5) OFFSET $6
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 47ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 43ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6) OFFSET $7
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6) OFFSET $7
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6) OFFSET $7
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 46ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7) OFFSET $8
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7) OFFSET $8
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7) OFFSET $8
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 50ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 42ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8) OFFSET $9
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8) OFFSET $9
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8) OFFSET $9
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 56ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/auth/register/ligamxj14 200 in 141ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 224ms
 GET /es-MX/pools/ligamxj14/fixtures 200 in 224ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 178ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 135ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 150ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 298ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /android-chrome-192x192.png 404 in 182ms
 GET /api/auth/session 200 in 86ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 173ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 244ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 271ms
 GET /es-MX/auth/signin 200 in 512ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 439ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 291ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 272ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 176ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 66ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 103ms
 GET /api/auth/session 200 in 35ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 124ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 185ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 222ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 36ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 45ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 67ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/auth/session 200 in 40ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 255ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 93ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/auth/session 200 in 67ms
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 131ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 158ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 205ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 122ms
 ✓ Compiled in 3.3s (5761 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 471ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 954ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 1444ms
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 465ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/auth/session 200 in 171ms
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 663ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 85ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 132ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 66ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 110ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 262ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 246ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 49ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 840ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 101ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 231ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 168ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 404 in 55ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 132ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 74ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22es-MX%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 207 in 730ms
 ✓ Compiled in 5.4s (3755 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 782ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 760ms (2157 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 1232ms
 ✓ Compiled /api/trpc/[trpc] in 1882ms (3775 modules)
 ✓ Compiled in 0ms (4161 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 4184ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 3032ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 130ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 209ms
 ✓ Compiled in 1400ms (5779 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 367ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 292ms
 ✓ Compiled in 1794ms (5779 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 395ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 191ms
 ○ Compiling /api/auth/[...nextauth] ...
 ✓ Compiled /api/auth/[...nextauth] in 3.4s (4163 modules)
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 6913ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 6881ms
 ✓ Compiled in 1ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5150ms
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6097ms
 ✓ Compiled in 1ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 5302ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 5783ms
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
 GET /api/auth/session 200 in 2365ms
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
🌐 Fetching standings from API: league=262, season=2025
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
✅ Standings fetched successfully: 1 result(s)
prisma:query UPDATE "public"."Competition" SET "logoUrl" = $1, "updatedAt" = $2 WHERE ("public"."Competition"."id" = $3 AND 1=1) RETURNING "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt"
prisma:query INSERT INTO "public"."CompetitionStandings" ("id","competitionId","seasonYear","standingsData","lastFetchedAt","lastUpdatedAt","fetchedBy","createdAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8) ON CONFLICT ("competitionId","seasonYear") DO UPDATE SET "standingsData" = $9, "fetchedBy" = $10, "lastFetchedAt" = $11, "lastUpdatedAt" = $12 WHERE (("public"."CompetitionStandings"."competitionId" = $13 AND "public"."CompetitionStandings"."seasonYear" = $14) AND 1=1) RETURNING "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt"
💾 Standings cached for competition=cmgzvjf1e000euvakfui9kspz, season=2025
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 2933ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 835ms
 GET /android-chrome-192x192.png 404 in 838ms
 GET /es-MX/auth/signin 200 in 873ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 263ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 205ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 227ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 229ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 115ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 143ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 137ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 194ms
 GET /api/auth/session 200 in 42ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 183ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 238ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 190ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 234ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 105ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 140ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 299ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 291ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 106ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 234ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 274ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 140ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 152ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 24ms
 ✓ Compiled in 6.7s (4143 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4407ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 5286ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 430ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 62ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 1361ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 2053ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 397ms
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 418ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 97ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 373ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 463ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 798ms
 ✓ Compiled in 7.5s (5761 modules)
 ✓ Compiled in 1ms (4143 modules)
 ✓ Compiled in 0ms (4143 modules)
 ✓ Compiled in 0ms (4143 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6631ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 6403ms
 ✓ Compiled in 0ms (4143 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 4371ms
 ✓ Compiled /[locale] in 0ms (4143 modules)
 ✓ Compiled in 1ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5824ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 4084ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 461ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 866ms
 GET /api/auth/session 200 in 75ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 133ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 148ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 41ms
 ✓ Compiled in 7.3s (4143 modules)
prisma:query SELECT 1
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 996ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 1351ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 1184ms
 GET /android-chrome-192x192.png 404 in 2868ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 1219ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 28ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 120ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 36ms
 ✓ Compiled in 1352ms (4163 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 778ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 923ms
 GET /es-MX/auth/signin 200 in 953ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 727ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 334ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 326ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 234ms
 ✓ Compiled in 1585ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /es-MX/dashboard 200 in 825ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 300ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 343ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 363ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 33ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 83ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 114ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 163ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 267ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 281ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 126ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 873ms
 GET /api/auth/session 200 in 761ms
 ✓ Compiled in 6.7s (5761 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 395ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 1034ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 1443ms
 ✓ Compiled in 1817ms (5781 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /es-MX/dashboard 200 in 453ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 186ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 230ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
 GET /api/auth/session 200 in 507ms
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 681ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 102ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 58ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 119ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 58ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/prizes.listByPool,pools.getById,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 71ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%7D 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.3h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 56ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 131ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.3h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 218ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 106ms
 ✓ Compiled in 4.6s (5761 modules)
 ✓ Compiled in 0ms (4143 modules)
 ✓ Compiled in 1ms (4143 modules)
 ✓ Compiled in 1ms (4143 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5847ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.3h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 5967ms
 ✓ Compiled in 0ms (4143 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5047ms
[Cache] CLEANUP: Removed 0 expired entries
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 3394ms
[Cache] CLEANUP: Removed 0 expired entries
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 3.7s (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 4424ms
[Cache] CLEANUP: Removed 0 expired entries
 ✓ Compiled in 3.8s (5781 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 381ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 201ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 317ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 426ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 249ms
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 192ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 746ms
 GET /api/auth/session 200 in 585ms
 ✓ Compiled in 7.9s (5761 modules)
 ✓ Compiled in 0ms (4143 modules)
 ✓ Compiled in 1ms (4143 modules)
 ✓ Compiled in 1ms (4143 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 7345ms
 ✓ Compiled in 0ms (4143 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 4650ms
 ✓ Compiled /[locale] in 1ms (4143 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 3994ms
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 5365ms
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason,prizes.listByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 6702ms
 ✓ Compiled in 0ms (4163 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 6777ms
[Cache] CLEANUP: Removed 0 expired entries
 ✓ Compiled in 0ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 8028ms
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 4834ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 4760ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 195ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 3933ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 656ms
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 389ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 434ms
 GET /api/auth/session 200 in 57ms
 ✓ Compiled in 5.2s (5781 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4491ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 4488ms
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 6435ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 714ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 394ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 283ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 294ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 136ms
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 207ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 122ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 110ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 197ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 260ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 90ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 144ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 154ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 110ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 174ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 74ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 78ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 128ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 172ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 207ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 480ms
 ✓ Compiled in 3.7s (5781 modules)
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 1ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 7168ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 6670ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 6016ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 212ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 333ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity,standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%2C%223%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 399ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 408ms
 ✓ Compiled in 2.8s (5781 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 2.1s (5781 modules)
 ✓ Compiled in 1ms (4163 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.4h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 8884ms
 ✓ Compiled in 1ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 9518ms
 ✓ Compiled in 1ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 6902ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 6939ms
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5035ms
 ✓ Compiled in 1ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4960ms
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 4288ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4299ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 29ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 342ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 363ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 155ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 132ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 156ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 85ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/auth/session 200 in 165ms
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 188ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 561ms
 ✓ Compiled in 11s (5761 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 7565ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 5516ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
 GET /api/auth/session 200 in 297ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 432ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 1084ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 1512ms
 ✓ Compiled in 1816ms (5781 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 5090ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 6126ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 239ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 289ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 329ms
 GET /api/auth/session 200 in 52ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 161ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 230ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 601ms
[Cache] CLEANUP: Removed 0 expired entries
 ✓ Compiled in 6.3s (5781 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 490ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 2715ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 106ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 291ms
 GET /api/auth/session 200 in 285ms
 ✓ Compiled in 6.5s (5781 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 3831ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 3899ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 446ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 642ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 354ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 217ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 568ms
 ✓ Compiled in 2.7s (5781 modules)
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5337ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5765ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 175ms
 ✓ Compiled in 4.2s (5781 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 562ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 306ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 391ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 592ms
 GET /android-chrome-192x192.png 404 in 889ms
 ✓ Compiled in 3s (5781 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 543ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 256ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 61ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
 GET /api/auth/session 200 in 190ms
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 207ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 115ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 144ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 56ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 326ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 346ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 69ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 23ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 21ms
 ✓ Compiled in 4.7s (5761 modules)
 ✓ Compiled in 1ms (4143 modules)
 ✓ Compiled in 1ms (4143 modules)
 ✓ Compiled in 0ms (4143 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6034ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 6083ms
 ✓ Compiled in 0ms (4143 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 4979ms
 ✓ Compiled /[locale] in 0ms (4143 modules)
 ✓ Compiled in 1ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 7943ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 6302ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 270ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 298ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 98ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 197ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 184ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 345ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 152ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 777ms
 GET /api/auth/session 200 in 646ms
 ✓ Compiled in 9.2s (5781 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 7587ms
 ✓ Compiled in 0ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5197ms
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4686ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 4398ms
 GET /es-MX/auth/signin 200 in 4366ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 2382ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 338ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 179ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 273ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 100ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 388ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 144ms
 ✓ Compiled in 6s (5781 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 1ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 7259ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 7370ms
 ✓ Compiled in 0ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5473ms
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
 ✓ Compiled in 0ms (4163 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5130ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 4123ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 184ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 213ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 72ms
[Cache] CLEANUP: Removed 0 expired entries
 ✓ Compiled in 4.8s (5781 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4227ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 4185ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 353ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 311ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 70ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 98ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 70ms
 ✓ Compiled in 2.4s (5781 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 325ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 226ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 197ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 213ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
 ✓ Compiled in 3.2s (5781 modules)
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 1ms (4163 modules)
 ✓ Compiled in 1ms (4163 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 8001ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 8036ms
 ✓ Compiled in 0ms (4163 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 7804ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 2991ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /android-chrome-192x192.png 404 in 583ms
 GET /api/auth/session 200 in 66ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 640ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 692ms
 ⨯ SyntaxError: Unexpected end of JSON input
    at JSON.parse (<anonymous>) {
  page: '/api/auth/session'
}
 ○ Compiling /_error ...
 ✓ Compiled /_error in 14.2s (6201 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
 GET /api/auth/session 500 in 14149ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 11608ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 5335ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 154ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 115ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 334ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
🔍 External Map Debug: {
  competitionId: 'cmgzvjf1e000euvakfui9kspz',
  externalMap: undefined,
  leagueId: undefined,
  season: 2025
}
 GET /es-MX/pools/ligamxj14/fixtures 200 in 587ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 284ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 148ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 199ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
 GET /api/auth/session 200 in 393ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 495ms
 GET /es-MX/auth/signin 200 in 634ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 265ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 306ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 239ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 238ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 114ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 48ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.7h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 64ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 216ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
 GET /android-chrome-192x192.png 404 in 185ms
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 205ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 180ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 275ms
 GET /android-chrome-192x192.png 404 in 280ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 118ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 225ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 139ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 283ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 389ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 188ms
 ✓ Compiled in 6.5s (6055 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 1062ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 1132ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 412ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 543ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 1602ms (4306 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 2046ms
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 114ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 361ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 69ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 100ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 79ms
 ✓ Compiled in 7.1s (6075 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 2964ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 3011ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 248ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 141ms
 GET /es-MX/pools/ligamxj14/fixtures 200 in 465ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 319ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 179ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 236ms
 GET /api/auth/session 200 in 131ms
 ✓ Compiled in 2.4s (6075 modules)
 ✓ Compiled in 1ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 1ms (4306 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5158ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 5185ms
 ✓ Compiled in 1ms (4306 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 6683ms
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4260ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 246ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 608ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 765ms
 ✓ Compiled in 7.1s (6075 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 11063ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 7329ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 877ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 922ms
 GET /android-chrome-192x192.png 404 in 1297ms
 ✓ Compiled in 3.4s (6075 modules)
 ✓ Compiled in 1ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 4795ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 4620ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 222ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 312ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 356ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 155ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 92ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 158ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 139ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 731ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 801ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 38ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 212ms
 GET /api/auth/session 200 in 72ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 157ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 536ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 399ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 1906ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 2070ms
 ✓ Compiled in 9.8s (6055 modules)
 ✓ Compiled in 0ms (4286 modules)
 ✓ Compiled in 0ms (4286 modules)
 ✓ Compiled in 0ms (4286 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 10459ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 8519ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 4990ms
 ○ Compiling /[locale] ...
 ✓ Compiled /[locale] in 3.5s (4306 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 4157ms
 ✓ Compiled in 8.5s (6075 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5920ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 5748ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
 GET /api/auth/session 200 in 289ms
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 370ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 99ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 234ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 138ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 175ms
 ✓ Compiled in 2.5s (6075 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 6189ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 6231ms
 ✓ Compiled in 1ms (4306 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 7060ms
 ✓ Compiled in 1ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5600ms
 ✓ Compiled in 1ms (4306 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 3926ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 2277ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 31ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.8h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 192ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.8h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 61ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 36ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.8h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 45ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 ✓ Compiled in 8.7s (6075 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 9636ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 9689ms
 ✓ Compiled in 0ms (4306 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 7077ms
 ✓ Compiled in 1ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 8384ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 8331ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/auth/signin 200 in 10744ms
 GET /android-chrome-192x192.png 404 in 10907ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 275ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 265ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 229ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 216ms
 ✓ Compiled in 7.7s (6075 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 1ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 8128ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 4420ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 256ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 176ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 191ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
 ✓ Compiled in 1661ms (6075 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /es-MX/pools/ligamxj14/fixtures 200 in 448ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 201ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 504ms
 ✓ Compiled in 2.2s (6075 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 12ms (4306 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5556ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/fixtures.listBySeason,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmgzvjf1e000euvakfui9kspz%22%7D%7D%7D 200 in 6701ms
 ✓ Compiled in 0ms (4306 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/ligamxj14/fixtures 200 in 7090ms
 ✓ Compiled in 1ms (4306 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 4444ms
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.8h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 5655ms
 ✓ Compiled in 0ms (4306 modules)
 ✓ Compiled in 0ms (4306 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 5267ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/prizes.listByPool,pools.getById?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 5361ms
 ✓ Compiled in 1ms (4306 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 5357ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE "public"."Match"."seasonId" = $1 ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/pools.getRegistrations,pools.getById,fixtures.listBySeason?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22seasonId%22%3A%22cmgzvjf1p000iuvak5xyizsk6%22%7D%7D%7D 200 in 2995ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 106ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
📦 Using cached standings (0.8h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22ligamxj14%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 63ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt" FROM "public"."Match" WHERE ("public"."Match"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query INSERT INTO "public"."Prediction" ("id","matchId","poolId","userId","tenantId","homeScore","awayScore","awardedPoints","isExact","createdAt","updatedAt") VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11) ON CONFLICT ("matchId","poolId","userId") DO UPDATE SET "homeScore" = $12, "awayScore" = $13, "updatedAt" = $14 WHERE (("public"."Prediction"."matchId" = $15 AND "public"."Prediction"."poolId" = $16 AND "public"."Prediction"."userId" = $17) AND 1=1) RETURNING "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt"
 POST /api/trpc/predictions.save?batch=1 200 in 77ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."kickoffTime", "public"."Match"."locked", "public"."Match"."status"::text, "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId" FROM "public"."Match" WHERE "public"."Match"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9) OFFSET $10
 GET /api/trpc/predictions.getByPool?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmgzvjf7h004kuvak15gbdeqx%22%7D%7D%7D 200 in 65ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4) AND ("j0"."tenantId" = $5 AND "j0"."isActive" = $6 AND ("j0"."id" IS NOT NULL))) OFFSET $7
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1) AND "public"."Match"."status" = CAST($2::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $3) GROUP BY "public"."Match"."seasonId" OFFSET $4
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 293ms
 GET /android-chrome-192x192.png 404 in 297ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 616ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 102ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 128ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/health,auth.getSession,user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%222%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 621ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 377ms
 GET /es-MX/auth/signin 200 in 797ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 379ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 301ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 251ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 294ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 93ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 34ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 195ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 204ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 520ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 172ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 247ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 100ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 146ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 194ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 50ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 369ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 390ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 220ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 109ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 123ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 29ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 198ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 250ms
 GET /api/auth/session 200 in 37ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 187ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 227ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 83ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 69ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 40ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 327ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 270ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 34ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 109ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 27ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 208ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 365ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 23ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 74ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 280ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 37ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 101ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 114ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 78ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 98ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 123ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 51ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 89ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 53ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 38ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 77ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 87ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 30ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 80ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 78ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 70ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 112ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 140ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 33ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 92ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 115ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 177ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 193ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 42ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 34ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 48ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 172ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 28ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 63ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 37ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 28ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 58ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 27ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 139ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 245ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 71ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 76ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 55ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 268ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 222ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 33ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 134ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 182ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 33ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 236ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 304ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 22ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 85ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 88ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 41ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 44ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 316ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 71ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 112ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 36ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 82ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 243ms
 GET /api/auth/session 200 in 144ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 146ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 332ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 31ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 121ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 165ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 157ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 186ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 39ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 150ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 145ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 51ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 97ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 107ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 67ms
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 58ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 57ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 41ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
prisma:query SELECT 1
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 123ms
 GET /api/auth/session 200 in 65ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 107ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
