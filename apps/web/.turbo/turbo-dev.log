
> @qp/web@0.0.1 dev C:\Users\victo\Documents\reactNextJS\quinielas\apps\web
> next dev --port 3000

   â–² Next.js 15.5.4
   - Local:        http://localhost:3000
   - Network:      http://192.168.100.3:3000
   - Environments: .env.local
   - Experiments (use with caution):
     Â· optimizePackageImports

 âœ“ Starting...
 âœ“ Ready in 14.6s
 âœ“ Compiled /middleware in 338ms (208 modules)
 â—‹ Compiling /[locale] ...
 âœ“ Compiled /[locale] in 5s (1428 modules)
 âœ“ Compiled in 773ms (559 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
Error: MISSING_MESSAGE: Could not resolve `home.hero.tagline` in messages for locale `en-US`.
    at HomePage (app\[locale]\page.tsx:73:45)
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
  71 |             brandName={brandName}
  72 |             host={host}
> 73 |             tagline={host !== "localhost" ? t("hero.tagline") : t("hero.tagline0")}
     |                                             ^
  74 |             ctaLabel={t("hero.cta")}
  75 |             logo={brandTheme?.logo?.url}
  76 |             mainCard={brandTheme?.mainCard} {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `home.hero.tagline` in messages for locale `en-US`.'
}
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
Error: FORMATTING_ERROR: The intl string context variable "brandName" was not provided to the string "Welcome to {brandName}"
    at HomeHero (app\components\home-hero.tsx:174:22)
  172 |                 <h1 className="text-2xl text-center md:text-4xl lg:text-5xl font-black leading-[1.1] tracking-tight mb-2">
  173 |                   <span className="bg-clip-text text-transparent bg-gradient-to-r from-primary via-accent to-primary bg-[length:200%_auto] animate-gradient">
> 174 |                     {t("title")}
      |                      ^
  175 |                   </span>
  176 |                 </h1>
  177 |                  {
  code: 'FORMATTING_ERROR',
  originalMessage: 'The intl string context variable "brandName" was not provided to the string "Welcome to {brandName}"'
}
Error: MISSING_MESSAGE: Could not resolve `home.hero.multiUserBadge` in messages for locale `en-US`.
    at HomeHero (app\components\home-hero.tsx:188:113)
  186 |                 <div className="flex items-center gap-1.5 md:gap-2 px-3 py-1.5 md:px-4 md:py-2 rounded-full bg-secondary/90 dark:bg-secondary border border-primary/20">
  187 |                   <TrendingUp className="w-3 h-3 md:w-4 md:h-4 text-white dark:text-secondary-foreground" />
> 188 |                   <span className="text-xs md:text-sm font-semibold text-white dark:text-secondary-foreground">{t("multiUserBadge")}</span>
      |                                                                                                                 ^
  189 |                 </div>
  190 |                 <div className="flex items-center gap-1.5 md:gap-2 px-3 py-1.5 md:px-4 md:py-2 rounded-full bg-accent/90 dark:bg-accent border border-accent/20">
  191 |                   <Zap className="w-3 h-3 md:w-4 md:h-4 text-white dark:text-accent-foreground" /> {
  code: 'MISSING_MESSAGE',
  originalMessage: 'Could not resolve `home.hero.multiUserBadge` in messages for locale `en-US`.'
}
 GET /es-MX 200 in 7714ms
 GET /en-US 200 in 3109ms
 â—‹ Compiling /api/auth/[...nextauth] ...
 âœ“ Compiled /[locale]/auth/signin in 8.4s (3618 modules)
 GET /en-US/auth/signin 200 in 10039ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 11468ms
 GET /android-chrome-192x192.png 404 in 10129ms
 GET /favicon.ico 404 in 10769ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 111ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 11167ms
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 548ms
 â—‹ Compiling /[locale]/[poolSlug] ...
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 âœ“ Compiled /[locale]/[poolSlug] in 4.4s (3644 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /en-US/pools 200 in 6226ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /en-US/leaderboard 200 in 149ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /en-US/fixtures 200 in 170ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /en-US/rules 200 in 177ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 351ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /android-chrome-192x192.png 404 in 414ms
 GET /api/auth/session 200 in 401ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 329ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
 GET /api/auth/session 200 in 165ms
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."User"."id", "public"."User"."email", "public"."User"."name", "public"."User"."phone", "public"."User"."phoneVerified", "public"."User"."image", "public"."User"."metadata", "public"."User"."createdAt", "public"."User"."lastSignInAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions", COALESCE("aggr_selection_2_PrizeAward"."_aggr_count_prizeAwards", 0) AS "_aggr_count_prizeAwards" FROM "public"."User" LEFT JOIN (SELECT "public"."Registration"."userId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."userId") AS "aggr_selection_0_Registration" ON ("public"."User"."id" = "aggr_selection_0_Registration"."userId") LEFT JOIN (SELECT "public"."Prediction"."userId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."userId") AS "aggr_selection_1_Prediction" ON ("public"."User"."id" = "aggr_selection_1_Prediction"."userId") LEFT JOIN (SELECT "public"."PrizeAward"."userId", COUNT(*) AS "_aggr_count_prizeAwards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."userId") AS "aggr_selection_2_PrizeAward" ON ("public"."User"."id" = "aggr_selection_2_PrizeAward"."userId") WHERE ("public"."User"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
 GET /api/trpc/user.getProfile?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 319ms
 GET /es-MX/auth/signin 200 in 386ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 228ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 318ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 293ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 202ms
 â—‹ Compiling /[locale]/dashboard ...
 âœ“ Compiled /[locale]/dashboard in 2.8s (4810 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 5216ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
 GET /android-chrome-192x192.png 404 in 337ms
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 373ms
 â—‹ Compiling /[locale]/pools/[slug]/fixtures ...
 âœ“ Compiled /[locale]/pools/[slug]/fixtures in 2.3s (4911 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3990ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 296ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 322ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 88ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 125ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 64ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 103ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 24ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 55ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 111ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 143ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 46ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 71ms
 GET /api/auth/session 200 in 87ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 146ms
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 135ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 90ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 242ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 59ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 30ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 203ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 327ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 99ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 96ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 32ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 271ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 69ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 105ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 43ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 113ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 148ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 38ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 113ms
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 122ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 23ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 82ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 137ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 80ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 97ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 22ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 130ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 140ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 31ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 37ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 64ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 84ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 86ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 63ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 91ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 85ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 25ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 77ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 157ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 159ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 82ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 177ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 81ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 106ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 133ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 29ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 83ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 174ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 79ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 37ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 141ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 30ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 59ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 114ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 70ms
 âœ“ Compiled in 2.7s (3685 modules)
 âœ“ Compiled in 1770ms (3685 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3600ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 329ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 267ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 279ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 21ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 66ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 77ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 306ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
[Fixtures] Matches found: 0
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 94ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 101ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 76ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Matches found: 0
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 123ms
 GET /api/auth/session 200 in 40ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 125ms
 GET /api/auth/session 200 in 138ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 41ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 95ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT 1
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
[Fixtures] Matches found: 0
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 105ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 53ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 199ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 223ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 97ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 50ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 467ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 79ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
[Fixtures] Matches found: 0
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 112ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 40ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 96ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Matches found: 0
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 131ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 26ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 44ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Matches found: 0
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 91ms
 GET /api/auth/session 200 in 67ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 77ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 102ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 165ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 243ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 27ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 233ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 0
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 263ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 58ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 75ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 95ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 56ms
 âœ“ Compiled in 1508ms (1678 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 1223ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 273ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 623ms (1683 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6064ms
 âœ“ Compiled in 1ms (3685 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 7151ms
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 6436ms
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 1ms (3685 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 3216ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3066ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 210ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 294ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 348ms
 GET /api/auth/session 200 in 49ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 110ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 91ms
 â—‹ Compiling /[locale]/auth/signin ...
 âœ“ Compiled /[locale]/auth/signin in 2s (3702 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 3056ms
 GET /es-MX/auth/signin 200 in 3548ms
 â—‹ Compiling /[locale]/[poolSlug] ...
 âœ“ Compiled /[locale]/[poolSlug] in 945ms (3712 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/pools 200 in 1655ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/leaderboard 200 in 158ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/fixtures 200 in 845ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/rules 200 in 299ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 194ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 385ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 372ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE (("public"."Pool"."tenantId" = $1 AND "public"."Pool"."slug" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."competitionId", "public"."Season"."name", "public"."Season"."year", "public"."Season"."startsAt", "public"."Season"."endsAt", "public"."Season"."createdAt", "public"."Season"."updatedAt" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."sportId", "public"."Competition"."slug", "public"."Competition"."name", "public"."Competition"."countryCode", "public"."Competition"."logoUrl", "public"."Competition"."createdAt", "public"."Competition"."updatedAt" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."metadata", "public"."ExternalMap"."createdAt", "public"."ExternalMap"."updatedAt" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityId" = $1 AND "public"."ExternalMap"."entityType" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."CompetitionStandings"."id", "public"."CompetitionStandings"."competitionId", "public"."CompetitionStandings"."seasonYear", "public"."CompetitionStandings"."standingsData", "public"."CompetitionStandings"."lastFetchedAt", "public"."CompetitionStandings"."lastManualRefreshAt", "public"."CompetitionStandings"."lastUpdatedAt", "public"."CompetitionStandings"."fetchedBy", "public"."CompetitionStandings"."createdAt" FROM "public"."CompetitionStandings" WHERE (("public"."CompetitionStandings"."competitionId" = $1 AND "public"."CompetitionStandings"."seasonYear" = $2) AND 1=1) LIMIT $3 OFFSET $4
ðŸ“¦ Using cached standings (3.6h old)
 GET /api/trpc/standings.getByPoolSlug?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolSlug%22%3A%22liga-mx-16-17%22%2C%22tenantSlug%22%3A%22ivoka%22%2C%22forceRefresh%22%3Afalse%7D%7D%7D 200 in 66ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."LeaderboardSnapshot"."id", "public"."LeaderboardSnapshot"."poolId", "public"."LeaderboardSnapshot"."tenantId", "public"."LeaderboardSnapshot"."kind", "public"."LeaderboardSnapshot"."createdAt", "public"."LeaderboardSnapshot"."data" FROM "public"."LeaderboardSnapshot" WHERE "public"."LeaderboardSnapshot"."poolId" = $1 ORDER BY "public"."LeaderboardSnapshot"."createdAt" DESC LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" WHERE "public"."Prediction"."poolId" = $1 OFFSET $2
 GET /api/trpc/leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 48ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."name", "public"."Pool"."tenantId", "public"."Pool"."seasonId", "public"."Pool"."endDate" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations", COALESCE("aggr_selection_1_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") LEFT JOIN (SELECT "public"."Prediction"."poolId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."poolId") AS "aggr_selection_1_Prediction" ON ("public"."Pool"."id" = "aggr_selection_1_Prediction"."poolId") WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."name", "public"."Tenant"."slug" FROM "public"."Tenant" WHERE "public"."Tenant"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl", "public"."Brand"."domains" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."sportId" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Sport"."id", "public"."Sport"."name" FROM "public"."Sport" WHERE "public"."Sport"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt", COALESCE("aggr_selection_0_PrizeAward"."_aggr_count_awards", 0) AS "_aggr_count_awards" FROM "public"."Prize" LEFT JOIN (SELECT "public"."PrizeAward"."prizeId", COUNT(*) AS "_aggr_count_awards" FROM "public"."PrizeAward" WHERE 1=1 GROUP BY "public"."PrizeAward"."prizeId") AS "aggr_selection_0_PrizeAward" ON ("public"."Prize"."id" = "aggr_selection_0_PrizeAward"."prizeId") WHERE "public"."Prize"."poolId" = $1 ORDER BY "public"."Prize"."rankFrom" ASC OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prize"."id", "public"."Prize"."poolId", "public"."Prize"."tenantId", "public"."Prize"."rankFrom", "public"."Prize"."rankTo", "public"."Prize"."position", "public"."Prize"."type"::text, "public"."Prize"."title", "public"."Prize"."description", "public"."Prize"."value", "public"."Prize"."metadata", "public"."Prize"."imageUrl", "public"."Prize"."createdAt", "public"."Prize"."updatedAt" FROM "public"."Prize" WHERE "public"."Prize"."poolId" IN ($1) ORDER BY "public"."Prize"."position" ASC OFFSET $2
 GET /api/trpc/prizes.listByPool,pools.getById,leaderboard.get?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22id%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22useLive%22%3Atrue%2C%22limit%22%3A100%2C%22offset%22%3A0%7D%7D%7D 200 in 77ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE "public"."Registration"."poolId" = $1 ORDER BY "public"."Registration"."joinedAt" DESC OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."User"."id", "public"."User"."name", "public"."User"."email", "public"."User"."image" FROM "public"."User" WHERE "public"."User"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT COUNT(*) AS "_count$_all" FROM (SELECT "public"."Prediction"."id" FROM "public"."Prediction" WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) OFFSET $3) AS "sub"
 GET /api/trpc/pools.getRegistrations,fixtures.getByPoolId?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%7D 200 in 86ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 114ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 158ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 131ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 143ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 185ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 105ms
 âœ“ Compiled in 4s (4898 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 1ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 5543ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 5567ms
 âœ“ Compiled in 1ms (3685 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 4188ms
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 1ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 3382ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 2932ms
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 326ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 337ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
 âœ“ Compiled in 3.2s (4898 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 3671ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 3708ms
 âœ“ Compiled in 0ms (3685 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3739ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 2811ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 305ms
 âœ“ Compiled in 1338ms (4898 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 3614ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 3862ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3770ms
 GET /api/auth/session 200 in 46ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 51ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 207ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 228ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 273ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 106ms
 âœ“ Compiled in 3.2s (4898 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4236ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 4271ms
 âœ“ Compiled in 0ms (3685 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3929ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 1234ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 342ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 2.8s (2896 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 4504ms
 âœ“ Compiled in 1ms (3685 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 5587ms
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3967ms
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 3778ms
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
 GET /android-chrome-192x192.png 404 in 3049ms
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 3354ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 89ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 225ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 137ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 119ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 164ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 56ms
 âœ“ Compiled in 3.1s (4898 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 4121ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 4161ms
 âœ“ Compiled in 0ms (3685 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."slug", "public"."Pool"."name", "public"."Pool"."seasonId", "public"."Pool"."ruleSet", "public"."Pool"."brandId" FROM "public"."Pool" WHERE ("public"."Pool"."slug" = $1 AND "public"."Pool"."tenantId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
 GET /es-MX/pools/liga-mx-16-17/fixtures 200 in 3453ms
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 3239ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 2911ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 3280ms
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 370ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."ExternalMap"."id", "public"."ExternalMap"."sourceId", "public"."ExternalMap"."externalId", "public"."ExternalMap"."entityType", "public"."ExternalMap"."entityId" FROM "public"."ExternalMap" WHERE ("public"."ExternalMap"."entityType" = $1 AND "public"."ExternalMap"."entityId" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."seasonId", "public"."Pool"."ruleSet" FROM "public"."Pool" WHERE ("public"."Pool"."id" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" WHERE (("public"."Registration"."userId" = $1 AND "public"."Registration"."poolId" = $2) AND 1=1) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt" FROM "public"."Pool" WHERE "public"."Pool"."id" IN ($1) OFFSET $2
[Fixtures] Pool ruleSet: {
  "rounds": {
    "end": 17,
    "start": 16
  },
  "exactScore": 5,
  "correctSign": 3,
  "goalDiffBonus": 1
}
[Fixtures] Round filter: { roundStart: 16, roundEnd: 17 }
[Fixtures] âœ… Applying round filter: { gte: 16, lte: 17 }
[Fixtures] WHERE clause: {
  "seasonId": "cmh0xr10n000duvqckc113v0w",
  "round": {
    "gte": 16,
    "lte": 17
  }
}
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."poolId", "public"."AccessPolicy"."tenantId", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."requireCaptcha", "public"."AccessPolicy"."requireEmailVerification", "public"."AccessPolicy"."domainAllowList", "public"."AccessPolicy"."maxRegistrations", "public"."AccessPolicy"."registrationStartDate", "public"."AccessPolicy"."registrationEndDate", "public"."AccessPolicy"."userCap", "public"."AccessPolicy"."windowStart", "public"."AccessPolicy"."windowEnd", "public"."AccessPolicy"."createdAt", "public"."AccessPolicy"."updatedAt" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1) OFFSET $2
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."codeBatchId", "public"."InviteCode"."tenantId", "public"."InviteCode"."code", "public"."InviteCode"."status"::text, "public"."InviteCode"."usesPerCode", "public"."InviteCode"."usedCount", "public"."InviteCode"."expiresAt", "public"."InviteCode"."createdAt", "public"."InviteCode"."updatedAt" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Match"."id", "public"."Match"."seasonId", "public"."Match"."round", "public"."Match"."matchday", "public"."Match"."status"::text, "public"."Match"."kickoffTime", "public"."Match"."homeTeamId", "public"."Match"."awayTeamId", "public"."Match"."homeScore", "public"."Match"."awayScore", "public"."Match"."venue", "public"."Match"."locked", "public"."Match"."finishedAt", "public"."Match"."createdAt", "public"."Match"."updatedAt", COALESCE("aggr_selection_0_Prediction"."_aggr_count_predictions", 0) AS "_aggr_count_predictions" FROM "public"."Match" LEFT JOIN (SELECT "public"."Prediction"."matchId", COUNT(*) AS "_aggr_count_predictions" FROM "public"."Prediction" WHERE 1=1 GROUP BY "public"."Prediction"."matchId") AS "aggr_selection_0_Prediction" ON ("public"."Match"."id" = "aggr_selection_0_Prediction"."matchId") WHERE ("public"."Match"."seasonId" = $1 AND "public"."Match"."round" >= $2 AND "public"."Match"."round" <= $3) ORDER BY "public"."Match"."kickoffTime" ASC, "public"."Match"."round" ASC OFFSET $4
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
prisma:query SELECT "public"."Team"."id", "public"."Team"."name", "public"."Team"."shortName", "public"."Team"."logoUrl", "public"."Team"."countryCode" FROM "public"."Team" WHERE "public"."Team"."id" IN ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12,$13,$14,$15,$16,$17,$18) OFFSET $19
[Fixtures] Matches found: 18
[Fixtures] First match: {
  id: 'cmh1cglu200h1uvl0yqbfihaz',
  round: 16,
  homeTeam: 'Necaxa',
  awayTeam: 'Santos Laguna'
}
prisma:query SELECT "public"."Prediction"."id", "public"."Prediction"."matchId", "public"."Prediction"."poolId", "public"."Prediction"."userId", "public"."Prediction"."tenantId", "public"."Prediction"."homeScore", "public"."Prediction"."awayScore", "public"."Prediction"."awardedPoints", "public"."Prediction"."isExact", "public"."Prediction"."createdAt", "public"."Prediction"."updatedAt" FROM "public"."Prediction" LEFT JOIN "public"."Match" AS "orderby_1" ON ("orderby_1"."id") = ("public"."Prediction"."matchId") WHERE ("public"."Prediction"."userId" = $1 AND "public"."Prediction"."poolId" = $2) ORDER BY "orderby_1"."kickoffTime" ASC OFFSET $3
 GET /api/trpc/fixtures.getByPoolId,predictions.getByPool,externalMaps.getByEntity?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%2C%22includeFinished%22%3Atrue%7D%7D%2C%221%22%3A%7B%22json%22%3A%7B%22poolId%22%3A%22cmh1a2a240077uvqceremslii%22%7D%7D%2C%222%22%3A%7B%22json%22%3A%7B%22entityType%22%3A%22COMPETITION%22%2C%22entityId%22%3A%22cmh0xqfzm0007uvqcxasv4ndn%22%7D%7D%7D 200 in 401ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 105ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 56ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 113ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX 200 in 77ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/trpc/health,auth.getSession?batch=1&input=%7B%220%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%2C%221%22%3A%7B%22json%22%3Anull%2C%22meta%22%3A%7B%22values%22%3A%5B%22undefined%22%5D%7D%7D%7D 200 in 55ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 137ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2) OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 83ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 52ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 172ms
 âœ“ Compiled in 1998ms (4898 modules)
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /es-MX/dashboard 200 in 272ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 158ms
 âœ“ Compiled in 616ms (1678 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT 1
prisma:query SELECT 1
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 787ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 419ms
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 1424ms (1683 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 6516ms
 âœ“ Compiled in 0ms (3685 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 8479ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 7238ms
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 3302ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 3231ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 285ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 257ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 376ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 49ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 53ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 95ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 30ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 87ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 141ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 127ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 184ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 38ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 62ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 49ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 101ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 162ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 77ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 120ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 148ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 27ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 131ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 160ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 39ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
 GET /api/auth/session 200 in 135ms
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 164ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 44ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 95ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 118ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 39ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 59ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 150ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 42ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 25ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 33ms
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 154ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 221ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 334ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 72ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 64ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 43ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 66ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 131ms
 GET /api/auth/session 200 in 57ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 95ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 128ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 38ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 105ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 134ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 28ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 73ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 100ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 53ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 147ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 173ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 34ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 50ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 72ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 68ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 63ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 110ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 25ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 108ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 73ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 31ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 80ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 103ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 287ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 86ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 187ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 96ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 95ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 122ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 38ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 82ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 207ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 31ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 57ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /api/auth/session 200 in 88ms
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 129ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 112ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 129ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 41ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 154ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 68ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 417ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 45ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 104ms
 GET /api/auth/session 200 in 86ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 66ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 107ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 43ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 3s (1678 modules)
prisma:query SELECT 1
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 842ms
[Cache] CLEANUP: Removed 0 expired entries
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 287ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 â—‹ Compiling /api/trpc/[trpc] ...
 âœ“ Compiled /api/trpc/[trpc] in 1309ms (1683 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
 GET /api/auth/session 200 in 4297ms
 âœ“ Compiled in 0ms (3685 modules)
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT 1
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 6142ms
 GET /es-MX/dashboard 200 in 4941ms
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 1ms (3685 modules)
 âœ“ Compiled in 0ms (3685 modules)
[auth-route] GET Request
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 4755ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 4304ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 386ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 206ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 273ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 36ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 195ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 80ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 508ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 106ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 119ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 44ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 77ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 96ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 63ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 70ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 160ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 182ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 72ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 112ms
 GET /api/auth/session 200 in 86ms
[Cache] CLEANUP: Removed 0 expired entries
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 53ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
 GET /api/auth/session 200 in 58ms
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 65ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 120ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 160ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 30ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 97ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 115ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 34ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 86ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 142ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 71ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 77ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 87ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 35ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 89ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 148ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 64ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 89ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 98ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 25ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 74ms
prisma:query SELECT 1
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Registration"."id", "public"."Registration"."poolId", "public"."Registration"."userId", "public"."Registration"."tenantId", "public"."Registration"."displayName", "public"."Registration"."email", "public"."Registration"."emailVerified", "public"."Registration"."phone", "public"."Registration"."phoneVerified", "public"."Registration"."inviteCodeId", "public"."Registration"."invitationId", "public"."Registration"."joinedAt" FROM "public"."Registration" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Registration"."poolId") WHERE ("public"."Registration"."userId" = $1 AND "public"."Registration"."tenantId" = $2 AND ("j0"."tenantId" = $3 AND ("j0"."id" IS NOT NULL))) OFFSET $4
prisma:query SELECT "public"."Pool"."id", "public"."Pool"."tenantId", "public"."Pool"."brandId", "public"."Pool"."seasonId", "public"."Pool"."name", "public"."Pool"."slug", "public"."Pool"."description", "public"."Pool"."prizeSummary", "public"."Pool"."ruleSet", "public"."Pool"."isActive", "public"."Pool"."isPublic", "public"."Pool"."startDate", "public"."Pool"."endDate", "public"."Pool"."createdAt", "public"."Pool"."updatedAt", COALESCE("aggr_selection_0_Registration"."_aggr_count_registrations", 0) AS "_aggr_count_registrations" FROM "public"."Pool" LEFT JOIN (SELECT "public"."Registration"."poolId", COUNT(*) AS "_aggr_count_registrations" FROM "public"."Registration" WHERE 1=1 GROUP BY "public"."Registration"."poolId") AS "aggr_selection_0_Registration" ON ("public"."Pool"."id" = "aggr_selection_0_Registration"."poolId") WHERE "public"."Pool"."id" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."name", "public"."Brand"."slug", "public"."Brand"."logoUrl" FROM "public"."Brand" WHERE "public"."Brand"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Season"."id", "public"."Season"."name", "public"."Season"."year", "public"."Season"."competitionId" FROM "public"."Season" WHERE "public"."Season"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Competition"."id", "public"."Competition"."name", "public"."Competition"."logoUrl" FROM "public"."Competition" WHERE "public"."Competition"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."AccessPolicy"."id", "public"."AccessPolicy"."accessType"::text, "public"."AccessPolicy"."poolId" FROM "public"."AccessPolicy" WHERE "public"."AccessPolicy"."poolId" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."InviteCode"."id", "public"."InviteCode"."code" FROM "public"."InviteCode" WHERE "public"."InviteCode"."id" IN ($1) OFFSET $2
prisma:query SELECT "public"."Invitation"."id", "public"."Invitation"."poolId", "public"."Invitation"."accessPolicyId", "public"."Invitation"."tenantId", "public"."Invitation"."email", "public"."Invitation"."token", "public"."Invitation"."expiresAt", "public"."Invitation"."acceptedAt", "public"."Invitation"."status"::text, "public"."Invitation"."sentCount", "public"."Invitation"."lastSentAt", "public"."Invitation"."openedAt", "public"."Invitation"."clickedAt", "public"."Invitation"."bouncedAt", "public"."Invitation"."createdAt", "public"."Invitation"."updatedAt" FROM "public"."Invitation" LEFT JOIN "public"."Pool" AS "j0" ON ("j0"."id") = ("public"."Invitation"."poolId") WHERE ("public"."Invitation"."tenantId" = $1 AND "public"."Invitation"."email" = $2 AND "public"."Invitation"."status" IN (CAST($3::text AS "public"."InvitationStatus")) AND "public"."Invitation"."poolId" NOT IN ($4,$5,$6) AND ("j0"."tenantId" = $7 AND "j0"."isActive" = $8 AND ("j0"."id" IS NOT NULL))) OFFSET $9
prisma:query SELECT MIN("public"."Match"."kickoffTime") AS "_min$kickoffTime", "public"."Match"."seasonId" FROM "public"."Match" WHERE ("public"."Match"."seasonId" IN ($1,$2,$3) AND "public"."Match"."status" = CAST($4::text AS "public"."MatchStatus") AND "public"."Match"."kickoffTime" >= $5) GROUP BY "public"."Match"."seasonId" OFFSET $6
 GET /api/trpc/userPools.list?batch=1&input=%7B%220%22%3A%7B%22json%22%3A%7B%22filter%22%3A%22ACTIVE%22%2C%22search%22%3A%22%22%2C%22page%22%3A1%2C%22pageSize%22%3A50%2C%22sort%22%3A%22NEXT_KICKOFF%22%7D%7D%7D 200 in 97ms
[auth-route] GET Request
[auth-route] Host header: ivoka.localhost:3000
[auth-route] Request URL: http://localhost:3000/api/auth/session
[auth-route] Setting AUTH_URL to: http://ivoka.localhost:3000
 GET /api/auth/session 200 in 45ms
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
[Cache] CLEANUP: Removed 0 expired entries
 âœ“ Compiled in 3.3s (1678 modules)
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE "public"."Tenant"."slug" IN ($1,$2,$3) OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
[33m[auth][warn][debug-enabled][0m Read more: https://warnings.authjs.dev
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /es-MX/dashboard 200 in 678ms
prisma:query SELECT "public"."Tenant"."id", "public"."Tenant"."slug", "public"."Tenant"."name", "public"."Tenant"."description", "public"."Tenant"."createdAt", "public"."Tenant"."updatedAt" FROM "public"."Tenant" WHERE ("public"."Tenant"."slug" = $1 AND 1=1) LIMIT $2 OFFSET $3
prisma:query SELECT "public"."Brand"."id", "public"."Brand"."tenantId", "public"."Brand"."slug", "public"."Brand"."name", "public"."Brand"."description", "public"."Brand"."logoUrl", "public"."Brand"."theme", "public"."Brand"."domains", "public"."Brand"."createdAt", "public"."Brand"."updatedAt" FROM "public"."Brand" WHERE ("public"."Brand"."tenantId" = $1 AND "public"."Brand"."slug" = $2) LIMIT $3 OFFSET $4
 GET /android-chrome-192x192.png 404 in 787ms
[Cache] CLEANUP: Removed 0 expired entries
